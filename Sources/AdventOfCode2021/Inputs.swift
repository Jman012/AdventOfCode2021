//
//  File.swift
//  
//
//  Created by James Linnell on 11/30/21.
//

import Foundation

public protocol Input {
	var inputExample1: String { get }
	var inputExample2: String { get }
	var inputMain1: String { get }
	var inputMain2: String { get }
}

public struct Inputs {
	
	public struct DayExample: Input {
		public init() {}
		public let inputExample1: String = #"""

"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""

"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day01: Input {
		public init() {}
		public let inputExample1 = #"""
199
200
208
210
200
207
240
269
260
263
"""#
		
		public var inputExample2: String {
			inputExample1
		}
	
		public let inputMain1 = #"""
149
163
165
160
179
184
186
199
207
210
211
212
228
241
242
265
269
271
287
286
295
296
293
300
301
302
304
308
320
322
321
333
350
345
348
347
351
348
349
345
353
366
376
384
387
390
391
378
382
394
409
411
415
419
424
425
427
428
436
445
446
459
464
478
479
493
492
493
482
484
491
492
497
501
506
509
521
526
527
539
546
547
551
562
567
568
573
590
591
596
612
613
618
620
593
594
596
597
596
612
616
618
620
621
622
611
612
613
610
615
616
634
647
654
655
656
657
659
676
678
675
703
715
722
738
747
760
765
771
784
789
792
769
770
773
762
772
817
823
825
864
863
849
852
862
868
893
895
896
925
946
945
946
945
964
954
962
969
976
1004
1007
1015
1029
1037
1043
1048
1070
1080
1100
1097
1094
1102
1099
1098
1099
1096
1097
1117
1123
1124
1125
1127
1119
1121
1137
1173
1174
1179
1181
1200
1204
1175
1179
1180
1189
1194
1195
1197
1199
1206
1200
1208
1211
1213
1214
1229
1230
1271
1278
1279
1282
1288
1285
1291
1290
1294
1297
1299
1300
1320
1324
1323
1328
1329
1330
1331
1334
1337
1311
1313
1314
1320
1323
1318
1323
1331
1339
1340
1328
1334
1336
1342
1343
1350
1357
1359
1377
1378
1384
1368
1369
1371
1380
1360
1349
1374
1373
1376
1372
1382
1384
1391
1393
1399
1403
1404
1419
1427
1425
1454
1455
1458
1459
1479
1484
1485
1487
1492
1497
1499
1496
1503
1528
1543
1535
1546
1547
1549
1546
1547
1549
1550
1553
1581
1583
1598
1616
1618
1640
1638
1655
1686
1685
1671
1674
1680
1673
1675
1676
1673
1674
1679
1681
1689
1701
1702
1708
1722
1723
1727
1739
1742
1743
1756
1759
1763
1767
1768
1772
1771
1775
1783
1784
1794
1796
1815
1811
1812
1822
1820
1836
1825
1828
1826
1827
1832
1844
1847
1854
1855
1857
1864
1854
1869
1868
1867
1868
1872
1875
1876
1880
1874
1875
1876
1877
1881
1882
1897
1898
1903
1904
1906
1904
1911
1908
1909
1930
1929
1928
1948
1958
1963
1964
1967
1971
1960
1958
1968
1969
1972
1973
1974
1980
1981
1992
1993
1999
1998
1997
1996
1997
2008
2007
1987
1991
1992
1998
2006
2007
2014
2017
2022
2027
2017
2020
2048
2049
2050
2054
2055
2067
2072
2089
2075
2076
2077
2078
2085
2086
2088
2091
2086
2094
2102
2103
2105
2107
2109
2111
2124
2125
2127
2130
2131
2133
2136
2147
2148
2153
2152
2158
2157
2164
2165
2167
2166
2200
2201
2200
2206
2207
2197
2208
2209
2211
2217
2235
2236
2243
2233
2226
2238
2244
2237
2232
2229
2233
2242
2239
2240
2241
2242
2247
2248
2260
2276
2273
2275
2301
2317
2340
2341
2328
2332
2326
2322
2323
2330
2334
2351
2352
2360
2370
2371
2370
2377
2378
2381
2392
2406
2385
2392
2397
2395
2393
2397
2395
2414
2418
2424
2429
2431
2455
2456
2468
2478
2483
2485
2484
2485
2486
2475
2484
2493
2494
2513
2519
2529
2530
2535
2537
2555
2540
2541
2539
2533
2534
2543
2548
2551
2557
2561
2563
2565
2600
2601
2595
2594
2609
2613
2587
2591
2598
2604
2564
2568
2570
2576
2575
2577
2595
2602
2605
2613
2615
2606
2601
2600
2598
2599
2601
2603
2617
2623
2625
2626
2638
2641
2642
2636
2637
2630
2617
2619
2616
2615
2624
2633
2635
2663
2666
2668
2671
2672
2675
2685
2686
2697
2702
2704
2723
2724
2729
2716
2718
2727
2731
2770
2761
2778
2800
2801
2798
2799
2800
2801
2798
2794
2795
2835
2836
2845
2848
2858
2873
2874
2892
2906
2898
2927
2933
2936
2940
2948
2950
2945
2947
2957
2949
2950
2951
2957
2959
2960
2962
2978
2982
2983
2986
3000
3002
3004
3005
3002
3009
3022
3009
3002
3003
3022
3037
3040
3041
3042
3044
3045
3049
3053
3057
3060
3061
3059
3060
3070
3071
3072
3075
3076
3081
3084
3081
3080
3086
3098
3099
3100
3105
3107
3113
3121
3126
3131
3136
3145
3150
3153
3154
3156
3157
3165
3154
3155
3156
3169
3176
3191
3188
3190
3197
3199
3221
3254
3262
3263
3259
3258
3259
3267
3266
3268
3263
3268
3269
3291
3295
3294
3326
3327
3335
3327
3343
3346
3369
3368
3372
3375
3379
3386
3395
3396
3397
3409
3412
3416
3418
3419
3418
3417
3414
3424
3425
3430
3431
3433
3434
3435
3421
3422
3424
3425
3416
3429
3423
3432
3444
3451
3468
3469
3468
3470
3471
3472
3473
3471
3483
3486
3495
3496
3501
3505
3496
3497
3507
3512
3515
3519
3523
3524
3525
3524
3549
3551
3525
3526
3534
3536
3542
3545
3548
3527
3529
3528
3553
3555
3560
3561
3580
3582
3579
3582
3586
3584
3588
3564
3572
3568
3567
3565
3583
3575
3579
3581
3589
3605
3613
3615
3617
3643
3645
3652
3654
3653
3654
3659
3656
3659
3653
3651
3654
3657
3675
3677
3679
3707
3710
3717
3755
3758
3759
3761
3766
3768
3759
3761
3762
3790
3791
3793
3797
3784
3785
3786
3787
3790
3792
3784
3789
3792
3795
3789
3790
3797
3783
3795
3792
3801
3804
3806
3810
3808
3813
3793
3797
3802
3810
3822
3825
3830
3839
3838
3837
3838
3839
3840
3841
3842
3862
3870
3871
3886
3887
3890
3882
3890
3884
3885
3907
3914
3926
3934
3935
3944
3954
3946
3951
3954
3957
3958
3970
3981
3988
3985
3988
3989
3982
3978
3979
3980
3981
4001
4002
4011
4016
4021
4026
4024
4027
4043
4044
4062
4066
4069
4067
4087
4099
4097
4091
4093
4090
4088
4094
4100
4108
4109
4105
4121
4138
4141
4144
4145
4154
4153
4156
4157
4153
4151
4157
4161
4162
4163
4165
4162
4171
4170
4177
4192
4202
4203
4204
4213
4217
4218
4220
4221
4222
4228
4258
4259
4261
4262
4263
4267
4269
4277
4279
4278
4256
4258
4277
4301
4297
4336
4315
4301
4302
4299
4291
4294
4295
4297
4291
4292
4297
4303
4313
4319
4327
4312
4311
4316
4321
4323
4335
4337
4338
4348
4343
4344
4345
4327
4329
4331
4334
4355
4356
4352
4360
4366
4376
4383
4391
4373
4388
4376
4372
4369
4366
4376
4392
4397
4398
4406
4405
4420
4427
4426
4423
4419
4420
4418
4420
4418
4423
4427
4428
4430
4419
4420
4421
4417
4418
4435
4434
4448
4449
4450
4451
4456
4453
4456
4480
4481
4504
4512
4519
4527
4530
4529
4530
4549
4569
4572
4579
4578
4583
4587
4599
4604
4619
4618
4619
4627
4628
4626
4627
4629
4628
4632
4635
4636
4669
4681
4684
4681
4683
4682
4686
4690
4689
4690
4692
4695
4696
4692
4691
4722
4721
4720
4721
4732
4735
4734
4737
4736
4739
4744
4775
4790
4796
4769
4770
4763
4765
4787
4804
4792
4794
4795
4793
4794
4799
4817
4828
4842
4844
4849
4852
4876
4877
4892
4896
4906
4907
4910
4922
4927
4930
4933
4934
4935
4940
4938
4951
4966
4975
4987
4988
4991
4992
4996
5001
5002
5014
5026
5031
5035
5038
5037
5038
5048
5049
5072
5074
5100
5101
5107
5116
5115
5127
5125
5134
5136
5140
5143
5150
5148
5178
5179
5181
5186
5187
5191
5202
5204
5202
5206
5217
5214
5224
5221
5236
5231
5232
5235
5226
5230
5231
5210
5219
5223
5224
5225
5229
5230
5239
5254
5261
5262
5265
5261
5262
5263
5270
5275
5274
5270
5267
5263
5265
5289
5290
5298
5300
5303
5301
5302
5305
5319
5324
5348
5351
5355
5356
5354
5365
5359
5356
5357
5380
5378
5395
5403
5413
5422
5421
5431
5430
5446
5458
5462
5466
5467
5471
5472
5471
5486
5494
5495
5497
5500
5520
5522
5525
5529
5562
5563
5566
5569
5572
5586
5592
5594
5595
5598
5603
5587
5588
5592
5595
5596
5605
5626
5628
5629
5632
5637
5639
5643
5647
5629
5634
5642
5643
5651
5646
5662
5663
5675
5677
5684
5688
5700
5703
5681
5720
5731
5738
5741
5743
5744
5754
5756
5764
5770
5769
5777
5780
5788
5791
5812
5813
5817
5830
5839
5840
5866
5870
5871
5864
5867
5870
5873
5874
5912
5914
5917
5922
5931
5932
5936
5937
5936
5938
5959
5961
5955
5960
5985
5998
5997
5999
6000
6003
6013
6027
6028
6048
6047
6049
6043
6050
6073
6074
6097
6098
6099
6100
6102
6104
6117
6116
6118
6138
6139
6151
6152
6150
6152
6153
6163
6187
6191
6187
6191
6190
6202
6205
6214
6213
6216
6217
6219
6225
6200
6201
6211
6212
6222
6231
6230
6249
6250
6282
6309
6312
6315
6310
6314
6328
6335
6336
6341
6348
6351
6353
6358
6357
6384
6385
6372
6377
6382
6384
6380
6382
6384
6385
6388
6391
6406
6405
6414
6415
6417
6418
6423
6424
6436
6453
6460
6459
6461
6475
6479
6476
6477
6479
6482
6481
6479
6478
6491
6500
6504
6505
6506
6483
6473
6474
6476
6477
6487
6498
6500
6501
6499
6497
6501
6503
6512
6510
6509
6496
6497
6498
6513
6520
6521
6523
6546
6545
6548
6558
6578
6579
6584
6582
6588
6593
6610
6616
6605
6607
6629
6626
6628
6648
6647
6675
6674
6682
6684
6691
6716
6725
6726
6731
6747
6764
6771
6774
6780
6784
6785
6789
6802
6823
6838
6853
6860
6847
6848
6863
6862
6868
6872
6873
6865
6869
6870
6872
6874
6898
6902
6908
6907
6914
6912
6913
6918
6940
6942
6943
6944
6945
6948
6949
6950
6956
6961
6978
6984
7007
7011
7019
7031
7038
7052
7053
7059
7064
7058
7064
7067
7069
7063
7062
7084
7086
7093
7096
7088
7091
7102
7099
7103
7131
7132
7127
7130
7131
7132
7133
7134
7133
7144
7145
7152
7156
7157
7158
7155
7169
7172
7182
7184
7209
7212
7180
7185
7184
7185
7190
7176
7178
7181
7178
7186
7179
7180
7183
7182
7183
7179
7181
7185
7187
7200
7201
7202
7204
7205
7213
7216
7217
7219
7220
7217
7234
7235
7238
7239
7237
7240
7241
7264
7280
7278
7267
7273
7283
7284
7287
7289
7288
7286
7311
7323
7332
7333
7336
7339
7343
7351
7376
7380
7381
7382
7392
7402
7400
7402
7409
7431
7435
7437
7439
7455
7451
7465
7468
7495
7503
7504
7508
7498
7502
7503
7504
7496
7504
7509
7517
7519
7514
7532
7534
7553
7551
7555
7550
7551
7552
7553
7554
7556
7557
7558
7559
7583
7588
7589
7590
7589
7605
7606
7608
7615
7637
7652
7664
7665
7667
7669
7688
7690
7716
7717
7720
7728
7732
7738
7752
7758
7780
7789
7801
7839
7838
7849
7848
7860
7851
7844
7845
7844
7849
7850
7855
7853
7854
7864
7865
7866
7867
7875
7888
7889
7895
7899
7911
7906
7934
7938
7941
7943
7936
7935
7937
7938
7940
7950
7959
7958
7966
7968
7992
7996
7997
7991
7995
7996
8005
8006
8007
8010
8013
8015
8014
8016
8048
8053
8051
8030
8032
8029
8028
8029
8038
8047
8069
8084
8099
8095
8099
8105
8096
8101
8102
8107
8131
8151
8154
8156
8158
8177
8207
8208
8187
8188
8191
8168
8169
8172
8179
8180
8181
8183
8193
8205
8245
8246
8255
8247
8251
8252
8251
8250
8252
8258
8259
8260
8267
8271
8290
8305
8315
8322
8335
8338
8341
8342
8332
8337
8345
8364
8375
8362
8361
8362
8354
8361
8362
8377
8379
8382
8406
8409
8412
8413
8419
8418
8419
8430
8435
8429
8434
8435
8417
8443
8434
8447
8449
8452
8459
8486
8487
8489
8490
8510
8508
8509
8513
8514
8511
8514
8493
8476
8473
8487
8511
8509
8517
8521
8544
8549
8567
8589
8594
8598
8624
8650
8654
8655
8663
8662
8675
8676
8693
8694
8691
8693
8698
8699
8720
8739
8740
8747
8739
8740
8761
8767
8761
8768
8762
8752
8757
8754
8756
8765
8771
8775
8780
8787
8774
8772
8784
8778
8783
8787
8789
8808
8809
8819
8837
8847
8850
8848
8864
8862
8864
8891
8892
8884
8886
8887
8888
8893
8894
8895
"""#

		public var inputMain2: String {
			inputMain1
		}
		
	}
	
	public struct Day02: Input {
		public init() {}
		public let inputExample1 = #"""
forward 5
down 5
forward 8
up 3
down 8
forward 2
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1 = #"""
forward 8
forward 3
forward 8
down 6
forward 3
up 6
down 3
down 8
down 5
down 1
down 4
up 4
forward 7
forward 7
down 8
forward 8
forward 2
forward 4
forward 6
down 2
forward 1
down 2
down 6
up 4
forward 4
forward 4
down 1
down 1
forward 8
down 9
forward 4
down 4
forward 9
down 9
forward 7
forward 4
forward 4
down 7
forward 9
up 5
forward 7
forward 4
up 5
up 6
down 9
forward 3
forward 3
forward 5
up 3
forward 8
down 9
forward 3
forward 5
down 2
forward 7
forward 8
forward 8
up 3
down 9
forward 2
forward 5
forward 4
up 1
down 3
forward 7
forward 4
up 3
down 8
up 8
forward 7
forward 7
down 2
down 7
forward 3
forward 1
down 7
down 4
down 9
forward 5
down 9
up 8
down 9
down 7
forward 2
down 5
down 6
forward 3
forward 2
forward 3
forward 2
down 4
up 1
forward 6
down 2
forward 2
down 5
up 1
up 8
forward 5
forward 6
up 8
down 4
forward 4
down 3
forward 5
forward 5
forward 8
forward 3
up 1
down 9
up 4
up 5
down 3
down 9
up 6
down 1
down 2
down 3
down 6
up 5
forward 9
forward 6
forward 6
forward 4
forward 7
up 6
down 2
down 9
down 9
forward 4
down 9
forward 2
down 4
down 8
down 3
up 1
down 2
down 7
down 1
down 5
up 5
forward 3
forward 2
down 2
up 4
up 9
forward 5
up 9
down 9
forward 1
down 4
forward 6
down 2
forward 7
forward 2
down 6
forward 9
down 9
down 8
forward 7
down 3
down 3
down 5
forward 5
up 9
up 5
down 1
forward 9
down 3
down 6
forward 3
up 4
up 1
down 3
down 1
up 6
forward 4
up 4
forward 5
down 3
down 5
forward 4
down 1
up 6
down 5
forward 1
forward 6
down 5
forward 1
forward 4
forward 2
down 1
down 3
down 9
down 9
down 8
forward 4
down 5
forward 6
up 6
down 3
forward 1
down 9
forward 4
down 2
up 5
down 4
forward 1
forward 2
down 6
forward 3
down 9
forward 6
forward 1
forward 7
up 1
up 7
up 2
forward 4
up 3
down 4
up 1
down 3
forward 1
down 5
up 6
forward 6
forward 6
up 3
up 2
down 8
down 2
down 2
down 7
forward 8
up 2
up 2
up 5
down 6
up 3
down 9
forward 7
down 7
forward 8
forward 2
forward 5
up 5
up 1
forward 5
up 2
up 3
up 2
up 3
down 3
down 2
forward 1
up 1
down 4
up 8
forward 5
down 9
forward 8
up 1
forward 7
forward 7
up 7
up 6
up 6
down 5
down 3
up 4
up 1
down 9
down 9
forward 4
down 7
forward 2
forward 8
forward 1
down 9
forward 2
forward 5
up 5
down 5
down 6
forward 1
down 4
forward 9
up 3
down 4
forward 7
forward 1
forward 3
forward 6
down 1
forward 3
up 5
up 6
down 3
forward 5
forward 8
forward 4
down 9
forward 2
forward 4
down 8
forward 6
down 7
up 7
forward 1
down 8
forward 5
forward 7
up 3
forward 7
forward 2
up 5
forward 3
down 4
up 5
down 6
up 6
forward 6
up 1
up 7
up 8
forward 4
down 6
down 8
up 8
down 2
forward 3
forward 9
down 9
down 6
down 2
up 4
forward 5
forward 6
forward 5
down 5
forward 5
down 2
down 9
down 3
down 4
forward 2
forward 7
down 7
down 2
down 4
down 8
up 6
down 7
forward 2
up 6
forward 6
down 4
up 8
forward 1
up 2
forward 6
forward 7
down 2
down 4
down 3
down 2
forward 5
down 4
forward 6
forward 6
down 8
forward 7
forward 1
forward 1
forward 4
forward 7
forward 8
down 2
forward 9
up 7
forward 1
down 1
forward 2
forward 2
up 4
forward 3
down 1
down 4
down 3
forward 8
forward 8
forward 9
forward 4
down 6
up 6
up 7
up 7
down 1
up 1
up 9
up 7
down 9
forward 4
up 8
down 5
up 3
down 2
forward 4
forward 6
up 7
up 2
down 5
down 3
down 9
forward 1
down 1
down 6
down 3
forward 9
down 3
up 6
up 4
up 6
down 6
up 7
down 5
up 4
up 3
up 3
up 2
forward 1
forward 5
forward 8
down 2
up 9
forward 6
forward 8
up 3
down 3
forward 7
forward 4
down 7
up 2
down 1
down 5
forward 8
down 6
down 2
down 9
down 5
up 7
up 5
forward 7
down 8
down 5
forward 7
up 5
up 1
down 4
forward 1
up 3
forward 7
forward 9
down 7
forward 4
down 9
down 2
up 2
forward 2
down 6
forward 3
down 5
up 8
forward 5
up 5
forward 1
down 4
forward 7
down 8
forward 7
up 2
forward 1
forward 2
down 7
forward 7
forward 5
up 3
down 8
forward 8
up 6
up 2
forward 9
down 7
up 6
down 1
up 5
forward 4
forward 9
forward 6
forward 3
forward 3
forward 1
forward 8
down 6
forward 3
up 2
up 6
down 3
down 7
forward 5
down 2
up 9
up 3
down 1
down 3
up 7
up 5
down 6
down 5
up 2
down 1
down 2
forward 1
down 1
forward 1
down 1
up 5
up 4
forward 1
down 7
forward 4
down 6
forward 2
forward 1
forward 4
forward 9
down 7
forward 7
down 7
down 5
forward 7
forward 3
forward 8
up 4
forward 9
down 1
down 9
forward 3
down 7
forward 1
forward 8
up 7
forward 5
down 8
forward 3
forward 6
forward 6
up 5
forward 7
up 3
down 9
forward 4
forward 4
forward 1
down 2
down 9
forward 8
forward 8
down 9
forward 5
up 4
down 6
forward 3
up 4
down 5
down 2
down 3
down 2
up 1
up 9
up 3
forward 5
forward 7
down 1
down 5
up 1
forward 8
down 5
forward 8
forward 8
down 2
forward 2
forward 7
forward 3
forward 6
up 9
down 3
forward 7
down 5
forward 3
up 1
down 3
down 9
forward 5
forward 5
up 5
down 3
down 3
up 1
forward 6
up 1
up 6
forward 5
down 3
down 9
forward 1
down 5
up 5
down 7
down 7
down 6
down 2
up 7
down 3
forward 2
up 6
down 2
forward 6
forward 9
down 6
down 4
down 5
down 7
forward 9
up 2
down 2
down 4
forward 4
down 9
forward 3
forward 8
forward 6
up 5
down 2
down 7
forward 7
up 6
down 4
up 8
forward 2
down 8
forward 7
up 8
up 5
up 8
down 1
forward 4
forward 7
down 5
forward 1
forward 5
down 9
down 6
up 8
up 5
down 7
down 4
forward 4
forward 2
forward 4
down 1
up 4
down 5
down 4
up 5
forward 2
up 3
down 9
down 1
down 4
up 1
up 7
down 5
forward 9
down 5
down 7
down 2
down 8
forward 7
down 5
down 6
forward 3
down 8
down 5
down 9
up 6
up 2
down 9
down 6
down 7
forward 8
down 8
forward 4
up 8
forward 3
down 2
up 2
forward 4
down 9
down 2
up 6
down 4
forward 6
down 7
forward 5
forward 4
down 3
up 6
forward 7
forward 1
up 6
down 6
forward 5
forward 3
down 8
up 8
up 8
forward 5
forward 1
up 1
forward 3
up 6
forward 2
down 8
forward 8
up 8
forward 1
forward 6
forward 8
up 7
up 3
forward 8
forward 5
down 4
down 4
forward 8
up 1
forward 5
down 9
forward 2
down 2
down 3
forward 1
down 2
up 3
down 1
up 1
up 1
forward 8
forward 5
forward 2
up 1
down 9
up 7
down 1
forward 9
up 4
forward 5
forward 5
forward 8
down 1
forward 3
forward 4
forward 8
up 2
forward 5
down 8
forward 5
up 7
forward 3
forward 2
forward 3
up 7
up 4
up 9
forward 7
forward 1
up 6
up 5
down 8
forward 3
down 5
forward 7
forward 3
up 9
forward 9
forward 7
up 2
down 7
forward 4
down 9
up 8
up 3
down 4
down 1
forward 4
up 3
down 6
down 2
forward 8
up 1
forward 5
up 7
down 5
forward 9
forward 6
forward 9
down 3
up 8
forward 6
forward 4
forward 2
forward 2
down 8
up 5
down 4
down 6
forward 3
forward 6
forward 1
forward 3
down 8
down 5
up 3
down 1
down 7
forward 8
forward 1
down 6
down 9
forward 2
up 5
down 6
up 6
down 5
down 8
forward 1
down 3
forward 1
forward 8
forward 2
down 4
forward 1
down 6
down 6
forward 3
up 7
forward 5
up 1
up 4
forward 7
forward 1
down 5
forward 2
down 1
forward 4
forward 2
forward 5
up 2
up 1
forward 2
down 4
down 5
forward 6
forward 1
down 7
down 6
down 2
forward 5
forward 6
up 8
up 6
forward 2
forward 6
down 9
down 4
forward 1
down 3
down 1
up 4
down 8
forward 3
down 5
up 4
down 5
up 3
down 1
down 1
down 9
forward 8
up 8
down 2
forward 9
down 8
down 4
up 4
up 9
up 4
forward 8
forward 9
forward 3
forward 2
down 2
forward 5
down 6
down 2
down 9
forward 3
up 4
forward 8
up 9
forward 2
forward 1
down 3
up 1
up 7
down 3
up 2
down 2
up 2
forward 4
down 7
forward 2
forward 4
forward 3
down 6
forward 4
down 3
forward 2
down 1
up 4
down 8
up 3
forward 4
up 6
forward 5
forward 3
forward 1
up 2
forward 4
forward 7
down 3
forward 9
up 7
down 9
forward 2
forward 4
down 9
down 1
up 3
forward 2
forward 7
down 7
forward 9
forward 5
forward 7
forward 2
forward 3
forward 4
forward 5
forward 6
down 1
forward 8
down 4
down 6
up 8
up 5
forward 5
down 9
down 2
down 2
forward 7
forward 8
up 8
down 4
up 5
forward 1
down 5
forward 3
up 3
down 6
forward 5
up 3
up 5
forward 4
forward 2
up 6
down 9
forward 7
"""#

		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day03: Input {
		public init() {}
		public let inputExample1 = #"""
00100
11110
10110
10111
10101
01111
00111
11100
10000
11001
00010
01010
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1 = #"""
000011001000
001111100100
110101011111
010100001101
110001001000
010000110100
010011010010
110101000011
100111001001
001101110011
001101011010
000010111000
111001101010
001010011011
000101101100
010011011101
111100101001
110110100011
001100000110
111010110110
110110011100
110000011111
010101111110
011001111010
110101100111
101111010011
001111000011
001110011100
000011001001
100101101100
010110000101
000001110001
000100011101
011110001101
000111000110
000111011001
110111110100
101110010000
111010000000
000111001001
010101010001
111100100000
100000000101
100111010111
000111110110
000000101010
010010001011
000100100000
111101011100
001100110000
001101010100
001011100101
010011000101
000001000101
010101110110
101110101101
011011110011
110101111101
110101011000
001001110100
001001110111
110100100100
110110110111
111001001100
010101101010
010101110010
110100011101
011111100110
001011010011
010100010100
010111101000
111000000101
110101110101
111010111111
101000110011
011111000011
001011010100
000001101001
011110010010
000001100111
111010110010
000111100110
010001000101
101010100001
110011000101
010101010110
111110111000
000100110001
100011100111
000110011010
001110100111
110001111000
101000010111
110000010011
111101111011
010001011010
011110000111
010011101100
011101010010
100111110011
100010100010
010000011100
001111010011
111000111111
000100111100
001100101110
001000011110
001101101000
100101000011
011001010011
111001100101
111110011111
011010111010
001100101101
111100110011
111001000100
100111111101
101101101111
110011100111
010000111101
001100111101
011110101000
001110010001
011010001110
110110110010
001010111101
110110011110
011110111111
001000011010
001011000010
110011111001
010110110000
101011111111
110100111001
100110000011
101010011100
011100011100
101011001011
001010100011
001110100011
000100000001
111011101000
000010011111
010101101110
001101010110
110100101101
101101010001
100110010111
100101010010
011000101101
010001100000
110100110010
001011101001
110100111000
111000111000
100011001001
011010100110
001110011110
101011110001
000100101010
001111101001
111011101010
001001010000
111000011000
001110100110
001111011100
000000111111
000100110111
010010111101
100011000110
001110011011
001011011000
000100101110
100001010100
110101010111
110110101011
111110011100
100001111101
001001001010
100101111001
101111010101
100110110000
101110010110
101000000111
100000110001
001111110100
011111010101
010100110111
010110101110
100001010010
101011100110
100001001010
001110101000
100010110010
100101100011
111000000010
101110110110
011110001011
101101111000
001111001000
010111000101
111111111100
000000011010
001000010110
111110000110
110001110010
101110001000
010100011110
111110001001
010111111100
111100100001
001000010101
010000001011
011000101000
001000010011
111100000111
100110101010
011001011111
101110100111
111011100010
010111110100
010111110110
111010101001
100110100111
100000001000
111001110100
000010101011
101000001111
001000011111
000010010000
110010000001
111110111010
111100101010
101000100111
110101011110
000010001010
100101111000
011001000011
101001000011
010101001000
111111101000
101001001101
010101000101
010010011100
011011011100
100010001111
100000000100
101111101001
011110001110
010110011000
111110110101
010101000010
001100110011
111110100001
110110111100
110101011101
100010111111
101111000111
001100011000
011001001110
101110111111
010110111100
111000001100
000001111110
101001011010
000001101100
110111111110
101010000101
010101001100
011101111001
110101100001
111000010110
100001101101
000000011110
011101001011
011111111000
011001001100
010011001100
001111010000
111111000001
010000010000
010000101001
111001110111
100100000101
100011010011
110111100010
111100110001
000000111000
000101101101
101110001010
011101111100
110000100101
010010111001
011011010111
011111101001
010001100001
110011100011
111010110011
011000101001
000011101001
001000110111
011010010001
101111111111
110011110101
000000100000
101111110010
011100010001
000001100001
000010000001
110110000100
011011001101
101001011111
000111100101
110101111010
100101100100
100001110111
101110001001
110110010110
111000000011
001101110010
010000001000
101001010101
000101111000
110011101110
010010001000
110010010000
011001110111
000010110000
000110100101
000101101001
000110101110
011101100001
100111110010
010100111001
110111111100
110110000001
001011000100
101010101010
011100000001
100001001000
010110110110
011000100001
100001001100
010000110000
111111101100
000101101110
111010101010
101001111100
010011100001
001011001001
100111110110
010111001000
101110000101
110110001110
010000000101
110010010110
011100100011
001111101000
111111011001
010100100010
001111000110
001110000110
110101010001
001100011100
010001101101
011110010100
110000101101
011110011110
110101001100
101011101000
101000001100
101000000010
011010100100
110000000101
000010001001
111010010110
000110110010
101000111001
101001011000
010111011111
000110111101
000100011001
010101110100
101010010111
001010100111
111010101101
101011011101
010011101110
000111111000
111000111011
011101110100
100100111110
011100000101
100011111010
010010010000
001011101111
110011001011
100011111100
000010011101
110010000000
001011010110
010110111110
101011010101
011111111111
001011001011
010101011001
110011110100
111001001111
111001110110
001000000111
111011111110
100100100111
110001110101
011001111110
001101000100
101011000100
110111101000
100100001100
011001011010
001000010001
011001111011
111010011000
111001001110
111100010000
111101100001
001000111110
011111001100
101001111001
010010000110
001010000011
100011100000
111101110110
100111010001
111000011111
100100010110
010100000101
101110001011
101100100011
010000101010
110110101001
010110100101
100000110111
010010000010
101000010001
110001111101
011001011100
011111100011
010100100000
001110011101
100011010001
000111010101
001111000100
001111101011
001001011101
110110101100
011101111010
011110001000
000111001100
010100111000
100100110000
110100001111
010010010110
110111101011
111011011001
011001101010
011011001010
111001101100
000011110001
111111001011
110111100110
110111110011
101010111011
111010110111
000100000010
110011011110
101010111101
000110111000
111011011111
010001110110
000011000100
100001010101
000111001101
111011000011
001110110000
110101111011
011011010100
001100100000
100011101001
010101100110
001101000000
011110100001
000110110011
000000000100
110110111010
000100001101
110101111000
010100101011
000011011011
011011100001
011011001100
000101111100
101010011110
011111100000
100011000101
010111101110
100000110101
001101111100
010111100010
011000000001
101001101111
001011000001
111000110101
000000110100
100001110001
001000101100
001011101100
110010101000
010011001011
001111011000
110001100100
110010100001
100101010100
010000101100
111010101111
000010000100
000101000010
110000101110
010001000110
110001011100
101000111101
111011111100
011100101111
010111100111
110111011001
010100000000
010100101101
101010111001
001010100001
011010010011
111011100101
010110110101
110010101100
000101010111
100010001110
100111101100
001000100001
110111110001
101100011100
100101101001
110010101111
000010001100
011111110010
011111011011
110101010010
001110101100
101111101100
101001101001
011010101010
111110100111
000110001111
100110110100
111011100100
100100101001
000011101100
100001000011
101100001011
000101011011
110001010000
111111011110
000100110100
011110110010
101111100111
010010110100
001001000001
111101101111
000010010001
001011001100
110110010000
101000100110
111100001010
011010101101
011101101110
010101000110
100110011110
011001000100
101111111010
011001101000
001010100100
000101111101
111010110001
001100111110
100000100000
101011101011
011101011110
110011111101
001111000111
101110111011
001110111011
001010100101
111011110111
011011000100
111000001101
111110011101
101001001000
111110001011
100000000110
011100010101
000111101001
110101001000
011000000011
100000001001
111010000100
111110010111
110000010001
100001000110
000100000000
101000100010
011011010011
001000111000
001101101010
000010010100
100101111100
101110110101
101110100010
010100000010
011110001001
111111010011
111111101001
001010000001
100100111000
000011001011
010111000010
000000001101
010100011111
101001010100
001110111111
111110111100
010010101011
100010000001
101001111010
111101000010
100100011101
011111010001
111111011000
110101010110
110101011011
010011110000
010000011001
011000111101
101011011000
110111101101
101010000000
101100100010
111001010111
100101010111
011101101011
011000011010
111010011101
000100011000
110111100011
001100010111
000111100100
011010000000
101010000001
010100011100
110001111001
011111010111
101111110011
101100001000
111011101001
010011001101
100001111110
000111011101
011110100010
010110010010
001110101001
001000100000
000110111110
111110011010
111100100100
010100110000
001101100100
100010111010
010000101111
100001011000
010100101100
101010011001
100111111000
001100001011
111111010000
100001111000
110010000111
000000110101
000101000100
100000101011
101100010100
100111101000
100111100001
100001100111
110001110000
001010100010
110000011010
111010111000
111100111001
011011001111
101011110111
001001010100
111110010011
111000110100
100111110101
001001001110
111000101111
011001110100
011100000110
000111010010
000111000010
111000111010
111100001110
000011111100
000111100001
110111001111
011111000100
101001000001
010001101111
001101001010
001100001100
000111001010
011010011101
000111111100
001011111110
101100101111
100010110001
101100001110
111000011001
010010000011
110000000000
111111011100
100011101010
101000000110
111111101101
001010101101
100101110011
001010111111
101001101000
100100000110
011011000011
000010110110
110110011111
100011100001
010011111100
011001101011
111001110001
111100111000
101010011111
010101111011
000001000100
110010111101
110101010101
100100100010
011000010000
111101011000
111111110101
111010100011
000100100010
001110110101
100001100110
001011000000
001110010101
010101100111
111101100111
000011110111
101000010101
000000101011
100101000111
110011001000
111101101101
111100001101
010101010100
011111001111
011010011011
001100011110
001111110101
010001010010
011010100000
100110100010
110110110001
100101000101
011101101100
111000100001
101011011010
101001100111
100000110110
101101011101
011000101110
000011011100
001010010101
010001010110
010100000100
001101100011
011110110000
101101100110
101011110000
111100111010
001101111010
011011011101
011111000111
001011000110
001110010110
110100101001
111010010010
011100101000
110100110011
111011111101
011011001011
011101101001
000101110110
111010101100
100100011001
111011101110
010001101110
010101011011
111010000110
111111111001
011011001000
110000110011
100010101001
010101100011
010011111010
101111011101
100110000111
110100100101
001000001100
001101100110
110110101111
111001011100
110110001001
010111110011
010000001010
000101100110
001011101101
001010110001
111100011111
110110100100
001001111011
010100010011
000100010011
010011010100
100011000100
001000101111
000011010001
111111001101
101011010001
011101100100
101110110100
100101100101
111000110010
010000010011
011011000010
011010011110
001000110101
011011101010
001101010101
001110110010
111100111100
011011100111
011101001101
010011011001
110100100000
110011010111
010111001100
101110101011
111001001010
010011101011
100000001010
000010101010
001110101011
000100111001
010011111011
110001001110
111111001100
011010100101
101001100010
100110000010
010001001000
111111010001
000110011110
001011011110
000111101100
000001110000
111011011010
110001001010
011110011001
001110100010
001101110110
100011011010
101000111010
010010101101
011100111000
011001100001
011100110110
111101011001
100100010000
101000001001
000000101110
001001000000
111110011000
101110100101
110010001100
110010001001
101110100110
100101000100
001010110110
000001011110
001001011111
011000001001
101001100001
100011011100
010000111111
001001010101
110011010011
010110111011
000010101001
110101101101
110101000111
111110010010
001110111101
100011110101
111000101011
110011101000
111111001000
010010111110
111001111001
100101111111
010011011000
100010010011
111110111001
100000011011
000110000100
101001001100
110101110010
010101101111
101010011010
110110110000
101100110100
110111010001
011011101111
000111110111
011000101010
001011110001
001010010001
110100110110
000101010101
101100101011
001010000110
111101010111
011011111000
011010010010
110010001110
001111100101
101101001111
011110110110
011011011011
101001100100
111001000000
010001101011
010011110101
101011000011
100010100111
100110111010
000010110101
111101010101
100100000100
101111111011
010101000111
000110001101
001101101110
011011011010
010100100001
101101110001
010010100001
011100100101
001110000011
010011011110
000100100011
110101100000
111011010110
110100111111
000101110101
110000000011
010110101101
100001011110
110110101101
001101000010
101110101000
010100101000
110001000010
111111000010
001000111101
001111111001
010100010000
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day04: Input {
		public init() {}
		public let inputExample1: String = #"""
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
6,69,28,50,36,84,49,13,48,90,1,33,71,0,94,59,53,58,60,96,30,34,29,91,11,41,77,95,17,80,85,93,7,9,74,89,18,25,26,8,87,38,68,5,12,43,27,46,62,73,16,55,22,4,65,76,54,52,83,10,21,67,15,47,45,40,35,66,79,51,75,39,64,24,37,72,3,44,82,32,78,63,57,2,86,31,19,92,14,97,20,56,88,81,70,61,42,99,23,98

22 59  7 10  6
33 36 96 55 23
13 85 18 29 28
75 46 83 73 58
34 40 87 56 98

73 96 47 14 10
28 11 79 84 20
74 30  0 59 71
80 93 42 22 17
44  2 81 29 15

73 32 37 93 39
 2 87 38 99 97
15 12 42 49 33
 9 23 25 94 19
57  4 18 70 79

43 79 59 71 78
51 97 37 28 26
46 21 84  8 86
96 30 17 34 49
55 90 99 75 61

43 86 35 51 24
16 25 29 21  3
 2 13  4 36 54
89 27  8 85 34
96 59 65 14 56

 5 57 43  4  1
86 80 67 30 20
22 16 99  0 14
40 25 59 91 54
82 95 96 37 24

97 20 87 66 21
25 40  9 78 89
52 75 95 63 62
32 43 13 47 69
53 48 56 29  4

24  4 65 12  8
76  3 81 99 49
45 33 31 66 34
17 94 75 35 88
64 10  7 93 95

88 20 99 15 83
81 40  5  6 98
49 74 18 27  9
43 69 28 37 71
87 82 90 14 47

21 97 92 42 60
11 65 98 95 29
 2 49 75 20 74
56 40 78 66 81
68  4 46 77 61

26 14 39 76 11
41 74 34 91  4
51  9 97 29 75
83 86 23 35 77
90  2 49 30 89

34 97  0 22 15
65 60 82 66 47
30  9 49 95 48
54 73 67 17 78
33 96 44  1 32

90 29 10 49 63
 8 26 95 61  0
54 13 51 12 44
32 48 16 47 84
55 46 93 14  3

68 55 46 16 54
97 59 49  6 21
52 32 15 96 70
57 56 61 51  0
40 31 62 24 48

75 56 70 42 14
77  9 23 62 25
29 27 54 17  2
55 72 43 15 96
45 30 88 86  1

65 12 22  6 51
77 81 15 91 19
80 71 27 89 52
75 92 41 83 57
40 44 66 84 98

89 80 73 59 18
74 55 67 71 10
78 27 37 57  3
92 26 17  5 72
52 83 28 76 51

64  0 87  4 13
14 43 42 62 31
17 84 72 91 83
53 80 59 61 74
47 22 38 28 77

65 49 91 94 19
25 81 64 57  9
50 95 82 12 66
53 54 85 36 11
31 56 83 18 60

 6 12 76 37 33
14 96 16 31 40
17 82 27 94 83
 1 50 49  9 54
29 70 59 91 77

85  0 33 41 16
 7 86 80 53 65
94 19 28 35 32
 4 55 93 97 63
83 22 67 56 36

28 70 65 17 19
88 51 15 73 12
11 49 80 23 42
26 54 90 75 29
74 77 91 86 66

88 22 83 10 43
57 34 15 23  8
94 42 68 67 37
84  3  6 71 62
89 45 72 55 38

68 27 93  7 15
85 96  1 56  6
32  2 30 55 17
99 90 37 80 50
77 78 58 98 57

 5 95 22 13 97
19  2 52 92 20
75 49 86 31 41
51 63 56 33 10
82 27 79 94 57

15 44 91 26  4
41 78 53 95 86
90 92 46 56 33
80 93 68 66 70
36 10 38  0  6

11 47 52 64 17
16 60 39 55 78
46 18 33 83 35
13 92  4 23 50
40  5 29  6 90

20 60  2 23 74
43 39 91 75 12
58 67 50 29 79
10 40 92 95 25
13 24 53 72 36

69 64 15 53 86
61 11 48 71 27
26 93 38 70 73
96 29 30 98 45
13  7 31 59 84

13 55 50 54 57
32 24 45  5 77
82 86  0  4 99
75 72 14 40 56
76 94 89 17 30

66 71 86 41  0
80 64  3 29 78
23 21 42 99 87
96 60 75 61 49
 2 83 85 12  1

78 96  4 82  6
73 36 57 99  8
11 83 15 35 30
85 87 25 22 66
32 64 16 50 43

 6 39 55  2  4
 1 61 99 71 80
46 88 22 31 60
62 66 37 97 76
74 34 10 52 24

42 38 13 65 12
 4 39 60 62 21
81 99  1 69 40
59 15 11 95 53
91 78 72 30 73

43 68 82 72  2
34 92 33 97 89
63 70  9  0 45
69 10 12 65 21
40 20 55 57 49

41 22  8 16 49
71 64 19 65 92
17 10 26 36 29
30 88  7 54 11
77 55 70 72 47

15 94 90  6 39
99 55 16 54 91
18  7 82 44 51
25 34 83 14 12
30  2 77 27 66

44 50 74 97 58
87 42 56 92 28
49 82 52 17 78
54 89 63 77 27
83 14 24 16 84

47 32  8 55 22
19 14 24 82  4
76 73  9 10 64
40  6 92 67 17
68 44 43  3 54

26 10  9 92 81
46 98 13  0 14
68 99 35 18 72
74 33 22 61 93
80 38 71  6 75

17 23 54 55 22
10  8 60 76 24
71 28 16 62 82
13 12 21 78 39
26 66 89 64 79

72 12 91 79 99
84 18 37 98 41
10 71 88 23 24
11 34 26 83 74
58 27 77  5  8

 9 90 13  0 46
 6 58 74 92  8
75 77 56 76 80
55 60 44 68 91
67 28 96 66 18

14 26 54 21 35
69 67 16 76 62
78 45 87 44 94
27 89 39 85 28
 3 81 93 64 74

10 28 35 84 76
40 11 95 59 57
53  4 24 50 45
 7 43 78 17 81
 1 74 82 16 27

 6 26 72 53 52
51 91 80 11 18
20 63 74 25 33
79  4  8 59 67
 3 13 55 81 83

98 85 27 84 42
90 15 17 61 34
40 64 86 96 45
59 47 53  5 35
11  7 41 80 13

47 48 54 31 76
99 32 98 20 15
61 41 30 94 37
34 59 86 55 45
 9 83 92 53  3

 3 80 24 94 25
17 23 64 76 71
20 97  0 56 72
95 73 28 59 21
14 81 46 67 88

 2 95  5 38 90
63 62 11 24 34
19 31 57 84 80
47 86 36 85 74
13 39 73 94 42

28  6 60 34 15
63 36 51 30 92
43 10  7 88 49
78 76 31 19 66
22 20 35 45 79

19 42 49 57 73
99 50 97 93 43
67 52 40 16 33
 2 55  0 71 46
21 75 59 66 83

19 86 30 25  3
32 39 65 54 29
38  6 85 52 13
43 95 18 44 15
53 70 16 31 71

68 73 74 83 70
56 15 12 78  4
43 87 63 90 86
41 16 23 17 77
80 14 61 30 50

88 28 45 80 65
64 11 68 33 27
29 70 44 82 37
42 66  9 32 87
10 24 15  3 46

99 81  5 62 97
 4 36 23 38 35
42 16 37 98 54
34 41 25 30 48
 8 60 63 89 72

25 33 94 23 14
45 10 79 30  3
22 28 95 27 11
74 13 39 84 83
72 88 56 53 97

31 92 91 84 71
54 90 89 80  0
98 96 65 66 68
35 39 70 11 82
15 34 42 52  2

68 71 86 82 37
28 48 12 34 54
62 55 10 25 89
60  4 50 21 22
 3  2 18 40 84

18 96 95 47 45
14 51  2 88 43
94 56 19 15  8
48 65 62  6 75
35 28 25 72 30

43 85 69 92 26
61 75  5 73 66
16 87  4 99 48
18 19 79 23 83
37 88 31 38 40

23 10 89 84 76
45 39 62 55 66
25 73 79 43 60
12 69 36 93 71
 9 77 14 58 49

 9 24 26 53 79
99 15 30 50 16
14 95 12 25 33
54 40 58 46 66
 5 23 39 29 48

64 67 11 10 92
59 99 80 97 66
45 51 88 47 82
35 27 72 85 16
54 58  2  1 52

10 97 27 54 66
89 85 39 99 98
 8 68 95 51 19
 4 17 79 87  3
72 43 76 58 33

95 72  0 18 17
 3 42 24 86 34
52 79 46 58 98
76 77 78 19 10
81 61 88 85 54

74 70 15 80 72
77 89 11 19 22
34 59 56 65 91
58  6 50 40 16
93 30 95 26 85

47 62 57  6 25
40 79 22 95 29
42 11 70 10 92
60 53 84 96 17
75 86 74 89 18

30 42  4 19 92
40 58 72  7 70
17 98 45 76 50
93 57 65 79  2
56 94 73 84 62

51  0 14  7 53
63 36 48 81 84
50 22 11 88  6
83 99 21 31 91
86 17 72 42 94

83  0 20 26  7
42 24 37 86 65
73 82 63 21 27
30 35  9 47 80
79 53  3 14 84

50 99 83 86 42
81 36 24  4 76
 0 71 66 41 57
 7 54 94 78 97
12  8 82 45 31

 4 91 57 50 37
22 46 86 24 26
39 54 48  7 42
 2 45 95 29 12
38 25 52  0 72

51 94 46 44 62
95 60  0 48 61
38 13 85 32  8
22 56 53 30 80
43 65 58 68 88

49 76 41 43 51
57 46 45 82 90
48 33 36  5 23
81 30  3 61 75
56 70 29 91 59

58 74 50 47 84
 2  1 62 36 60
32 16 95 43 27
79 12 39 56 11
 9 33  4 25 61

23 84 16 51 39
72 19 53 64 43
 9 44 10 52 26
45 68 29 56 74
62 42 46 95  0

16 83 27 85 56
13 41 49 79 53
18 63  7 60  3
45 15 48 69 29
46 86 35 34 32

85  2 96 15 43
33 30 29 53 98
21 55 61 73 40
31  4 66 75 59
26 32 91 38 80

69 81 65 30 77
82 22 83  0 38
 2  3 29 47 94
42 55  9 18 97
53 45 90 31 44

23 86  0 35 84
27 80  3 64 12
 1 96 48 93 85
69 24 61 15 22
91 72 62 13 76

81 51 67 60 16
65 48 86 39 97
92 93 49 77 59
15 94 88 52 19
80 83 23 61  4

47 84 46 79 55
92 38 65 42 76
 9 58 26 95 86
30 49 56 69 59
94  4 25 89 44

73 10 29  0 48
56 40 19 84 61
52 31 25 86 21
79 55 53 51  5
81  9 35 72 15

41 95 30 58 73
26 80  4 21 96
61 92 76 93 74
 2 69 60  8 20
46 98 70 72 83

 1 99 31  4 86
93 64  8 43 61
33 36 75 90 50
52 13  3 42 34
22 65 60 18 76

17 63  6 66 92
51 67 86 88 18
82 83 32 74 30
 5 33  9 28 61
72 75 25 23 60

43 28 40 53 52
54 12 77 10 83
21 44 63  0  1
15 22 33 49  2
80 41  3 46 55

 1 97 75 37  4
47 33 13 21 40
27 62 15 90 30
11 83 63 36 35
 0 12 60 91 42

 0 45 17 88 18
66 10 63 62  8
36  5 47 39 67
21  3 61 29 19
82 58 33  6 59

37 92 69 56 52
46 66 20 78 13
83 99 16 31  0
36 35  2 68  9
70 82 94 96 29

62 65 85 37  3
74 95 34 96 58
15 33 49 21 93
19 83 66  6 25
81 84 23  0 76

95 84 71 92 52
54 36 66 59 82
 0 76 32 45 83
69 27 25 88 38
81 96 63  4 61

73 51 28 48 40
 3 38 11 14 35
66 91 86 20 81
53 39 46 71  1
97 60 21 93 23

92 70  4 60 95
58 49 20 15 25
55 68 21 84 80
56 41 82 23 19
30 74 65 27 29

81 97 68 46 75
62 73 63 36 41
 1  5 91 84 37
45 92 20 49  7
25 26  3 88 56

25  9 94 37 26
44 58 84 91 38
39 46 57 98 50
96 42 73 24 70
71 32 53 48 13

98 72 25 96 77
80 64 88 53 23
21 37 45 24 18
41 86 59 68  5
76 50 36 26 12

77 79 88 74 12
21  9 85 26 68
11 62 64  4  5
47 33 76 63 87
55 19  2 60 95

74 79 30 14 35
90 52 17 29 63
18 69 78 34 26
92 42 85 71 56
12  2  5  0 98
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day05: Input {
		public init() {}
		public let inputExample1: String = #"""
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
905,103 -> 905,82
253,13 -> 253,546
578,60 -> 900,60
102,71 -> 535,71
678,419 -> 678,363
366,938 -> 366,136
15,299 -> 149,165
445,99 -> 464,80
519,262 -> 814,262
687,609 -> 687,219
528,128 -> 398,128
704,363 -> 49,363
335,157 -> 335,715
536,120 -> 215,441
494,587 -> 494,764
15,672 -> 15,835
748,346 -> 748,471
231,395 -> 89,395
922,989 -> 18,85
787,828 -> 453,828
117,186 -> 729,798
647,201 -> 439,201
368,399 -> 261,399
337,294 -> 301,294
20,660 -> 396,660
658,383 -> 658,445
284,225 -> 284,202
89,582 -> 89,468
517,582 -> 400,582
168,167 -> 168,473
697,682 -> 408,393
528,198 -> 528,245
189,171 -> 785,767
679,598 -> 965,598
149,560 -> 187,560
778,734 -> 406,734
626,959 -> 626,330
392,479 -> 392,461
70,705 -> 70,498
462,132 -> 380,50
776,690 -> 776,413
710,894 -> 153,894
484,532 -> 706,754
72,148 -> 72,120
441,81 -> 576,81
367,959 -> 367,199
217,706 -> 217,471
715,418 -> 963,170
26,126 -> 26,659
750,126 -> 589,126
404,257 -> 404,136
809,148 -> 848,148
647,205 -> 572,205
977,67 -> 223,821
846,299 -> 846,444
575,946 -> 575,742
216,853 -> 969,853
120,600 -> 120,351
105,565 -> 100,565
184,781 -> 747,781
133,727 -> 662,198
273,388 -> 273,828
472,324 -> 539,324
497,889 -> 497,249
56,145 -> 655,145
883,99 -> 986,99
391,607 -> 503,719
321,835 -> 865,291
847,436 -> 754,343
381,105 -> 381,648
100,101 -> 120,101
67,324 -> 724,981
68,618 -> 316,370
202,807 -> 202,382
751,318 -> 689,318
95,811 -> 95,695
644,293 -> 644,487
715,331 -> 309,737
62,954 -> 62,605
25,37 -> 962,974
642,201 -> 178,201
102,74 -> 102,764
752,127 -> 435,444
533,875 -> 808,600
984,389 -> 984,551
420,329 -> 420,705
682,965 -> 319,602
140,416 -> 671,416
11,14 -> 984,987
833,846 -> 833,217
414,434 -> 19,829
138,384 -> 138,80
535,61 -> 208,388
900,303 -> 170,303
24,980 -> 984,20
477,794 -> 74,391
496,101 -> 462,101
981,848 -> 981,244
721,974 -> 721,911
887,135 -> 696,135
865,641 -> 865,359
194,19 -> 920,745
520,227 -> 704,227
644,755 -> 830,755
737,799 -> 56,118
259,79 -> 249,79
970,152 -> 970,545
396,389 -> 396,971
383,904 -> 510,777
199,960 -> 989,170
376,55 -> 376,427
615,566 -> 272,223
266,343 -> 334,275
842,295 -> 935,295
450,175 -> 240,175
179,842 -> 977,842
170,719 -> 708,181
172,745 -> 128,701
180,329 -> 180,336
471,762 -> 989,762
524,889 -> 807,606
255,806 -> 255,937
819,869 -> 819,714
695,339 -> 528,339
65,925 -> 786,204
814,227 -> 159,882
799,73 -> 959,73
163,177 -> 163,468
167,600 -> 167,347
742,24 -> 64,24
448,91 -> 499,91
134,602 -> 426,310
468,314 -> 107,314
175,712 -> 872,15
398,225 -> 398,502
960,64 -> 960,406
54,514 -> 54,914
626,836 -> 626,398
599,544 -> 344,289
746,635 -> 547,834
107,747 -> 824,30
347,15 -> 178,15
204,532 -> 621,115
850,523 -> 850,235
986,932 -> 986,600
891,150 -> 891,182
769,783 -> 769,540
148,269 -> 805,269
127,67 -> 957,897
851,411 -> 396,411
619,913 -> 435,913
210,808 -> 763,255
548,140 -> 896,140
495,420 -> 495,510
332,967 -> 332,412
539,613 -> 317,613
426,765 -> 426,123
980,18 -> 14,984
921,551 -> 921,923
764,88 -> 41,811
959,702 -> 959,229
171,473 -> 171,401
588,769 -> 373,769
599,695 -> 18,695
878,126 -> 108,896
852,141 -> 592,141
401,268 -> 213,268
227,988 -> 88,988
794,124 -> 704,124
276,914 -> 429,914
330,884 -> 330,816
841,591 -> 628,591
356,325 -> 356,149
718,478 -> 722,478
570,802 -> 303,802
697,782 -> 148,233
279,662 -> 279,608
460,752 -> 988,752
108,951 -> 837,222
509,371 -> 509,952
35,190 -> 90,135
684,391 -> 460,391
493,153 -> 296,153
989,744 -> 989,811
962,22 -> 214,770
122,511 -> 44,511
761,860 -> 378,860
663,599 -> 30,599
963,826 -> 177,40
921,136 -> 745,136
424,688 -> 131,688
284,299 -> 284,853
73,205 -> 73,864
152,747 -> 141,736
283,305 -> 283,19
535,537 -> 483,537
749,200 -> 749,395
259,666 -> 199,606
571,288 -> 872,589
748,503 -> 254,503
903,865 -> 501,463
641,712 -> 807,712
334,432 -> 334,388
394,442 -> 936,984
661,183 -> 275,183
346,842 -> 88,842
503,570 -> 503,745
825,388 -> 763,326
948,575 -> 948,927
708,761 -> 708,15
96,545 -> 851,545
874,71 -> 874,986
908,355 -> 552,355
296,596 -> 487,596
78,877 -> 918,37
934,969 -> 15,50
798,667 -> 333,667
111,974 -> 391,974
687,514 -> 255,514
261,751 -> 261,774
637,144 -> 637,212
268,710 -> 268,705
737,246 -> 682,246
961,143 -> 140,964
294,911 -> 187,911
372,495 -> 764,495
794,567 -> 120,567
935,681 -> 479,681
68,53 -> 989,974
395,550 -> 664,550
190,885 -> 291,885
897,667 -> 897,789
826,922 -> 47,143
468,378 -> 793,378
580,802 -> 164,802
492,321 -> 39,774
602,421 -> 252,71
79,749 -> 721,749
826,196 -> 826,728
564,632 -> 564,137
594,747 -> 594,412
964,735 -> 987,758
388,630 -> 815,203
666,892 -> 666,279
980,767 -> 980,370
607,459 -> 110,956
680,875 -> 680,65
970,893 -> 133,56
339,254 -> 339,893
347,602 -> 888,61
435,946 -> 379,946
812,855 -> 812,415
814,385 -> 814,661
721,765 -> 721,181
176,468 -> 176,379
550,947 -> 456,947
53,813 -> 838,28
29,24 -> 973,968
654,807 -> 380,807
950,266 -> 950,339
959,429 -> 959,54
35,20 -> 35,922
11,10 -> 988,987
409,554 -> 390,554
862,235 -> 116,981
716,11 -> 617,11
472,382 -> 472,441
798,549 -> 402,549
29,724 -> 29,35
333,531 -> 488,531
196,334 -> 196,166
82,394 -> 706,394
314,751 -> 314,748
657,111 -> 657,900
833,382 -> 833,813
352,479 -> 352,46
608,449 -> 608,853
687,727 -> 641,681
392,828 -> 307,828
208,244 -> 775,244
922,286 -> 89,286
762,736 -> 83,736
143,57 -> 913,827
787,933 -> 787,42
209,692 -> 447,692
99,891 -> 765,225
55,735 -> 55,909
898,75 -> 81,892
121,685 -> 158,722
415,461 -> 415,374
158,898 -> 730,326
186,988 -> 186,609
924,913 -> 924,646
35,899 -> 124,899
495,259 -> 201,259
914,828 -> 914,716
368,78 -> 734,444
735,97 -> 42,790
972,895 -> 447,895
197,834 -> 320,834
799,165 -> 14,950
348,556 -> 562,556
71,23 -> 984,936
974,871 -> 729,871
706,378 -> 817,378
885,287 -> 467,287
741,691 -> 61,11
227,632 -> 531,328
716,795 -> 160,239
327,261 -> 855,789
100,263 -> 582,745
729,72 -> 73,72
853,546 -> 853,802
399,472 -> 106,765
787,848 -> 619,848
866,150 -> 127,889
862,48 -> 34,876
579,257 -> 579,601
685,633 -> 227,175
670,161 -> 396,161
156,694 -> 785,65
232,384 -> 232,327
544,83 -> 307,83
98,273 -> 442,273
34,975 -> 988,21
739,802 -> 739,264
409,402 -> 466,402
700,95 -> 677,95
989,14 -> 16,987
921,989 -> 152,220
857,821 -> 78,42
335,114 -> 467,114
17,50 -> 904,937
757,372 -> 698,372
42,28 -> 600,586
867,617 -> 516,617
909,281 -> 909,178
254,879 -> 685,879
133,353 -> 696,353
430,146 -> 441,135
720,657 -> 720,909
389,462 -> 780,71
945,152 -> 657,440
364,570 -> 364,336
268,67 -> 254,67
171,951 -> 895,227
706,332 -> 706,380
265,703 -> 517,703
542,421 -> 542,534
900,67 -> 752,215
307,205 -> 307,321
319,111 -> 319,793
158,419 -> 499,78
32,148 -> 372,148
375,937 -> 375,241
757,928 -> 757,724
508,638 -> 508,747
68,655 -> 68,24
209,949 -> 209,782
193,359 -> 193,258
580,542 -> 799,542
556,326 -> 556,533
984,930 -> 98,44
771,447 -> 158,447
951,544 -> 951,469
100,148 -> 880,928
342,800 -> 688,800
381,839 -> 381,662
510,340 -> 499,340
114,864 -> 958,20
131,357 -> 131,913
306,877 -> 336,877
195,755 -> 892,58
63,936 -> 878,121
144,505 -> 144,945
769,25 -> 314,25
94,831 -> 198,831
121,818 -> 127,818
228,982 -> 228,788
139,730 -> 770,99
43,973 -> 953,63
837,435 -> 498,774
168,803 -> 918,53
512,346 -> 512,255
174,149 -> 986,961
436,66 -> 436,639
704,707 -> 704,259
161,101 -> 161,415
482,254 -> 42,694
39,843 -> 811,71
628,555 -> 541,555
192,274 -> 196,274
736,140 -> 606,270
910,203 -> 598,515
354,785 -> 354,294
264,663 -> 155,663
139,193 -> 139,792
212,48 -> 948,784
696,252 -> 68,880
908,29 -> 114,823
515,23 -> 515,504
977,746 -> 977,691
837,714 -> 773,714
462,921 -> 462,294
395,630 -> 931,94
336,318 -> 45,609
917,288 -> 917,534
78,590 -> 543,590
416,555 -> 416,461
272,141 -> 441,141
883,813 -> 892,822
45,90 -> 892,937
890,16 -> 146,760
506,765 -> 555,716
313,818 -> 313,649
867,668 -> 777,668
804,484 -> 804,821
374,895 -> 374,50
173,980 -> 173,796
74,45 -> 336,307
316,922 -> 866,922
187,896 -> 265,974
790,160 -> 790,290
753,907 -> 753,445
70,718 -> 168,620
565,672 -> 599,672
563,87 -> 790,87
947,635 -> 843,739
712,556 -> 712,313
928,138 -> 928,781
677,720 -> 677,982
420,131 -> 804,515
980,416 -> 314,416
790,221 -> 790,866
289,680 -> 289,343
968,591 -> 973,591
289,265 -> 289,985
448,194 -> 448,185
424,457 -> 372,405
92,825 -> 355,825
108,89 -> 434,89
785,155 -> 785,769
829,916 -> 829,879
983,159 -> 983,799
467,357 -> 467,13
552,461 -> 60,461
315,339 -> 490,164
33,14 -> 978,959
769,414 -> 879,414
546,739 -> 200,739
389,874 -> 389,456
88,372 -> 779,372
327,491 -> 801,491
130,922 -> 586,466
949,106 -> 113,942
335,257 -> 338,257
339,695 -> 621,977
819,222 -> 819,963
744,214 -> 744,158
190,630 -> 866,630
313,268 -> 313,485
158,696 -> 696,696
957,24 -> 460,521
336,795 -> 336,161
456,297 -> 619,297
781,247 -> 781,980
336,508 -> 962,508
799,185 -> 799,593
63,180 -> 508,180
281,389 -> 320,389
703,585 -> 816,698
151,758 -> 151,399
108,283 -> 156,331
988,986 -> 18,16
219,467 -> 704,467
614,909 -> 614,22
907,327 -> 410,824
869,628 -> 791,628
141,937 -> 161,937
139,866 -> 139,448
789,45 -> 78,45
852,395 -> 187,395
115,147 -> 956,988
702,274 -> 702,741
760,547 -> 760,324
749,18 -> 749,726
974,891 -> 108,25
67,646 -> 67,432
901,63 -> 61,903
929,77 -> 36,970
136,639 -> 382,639
292,687 -> 642,687
242,514 -> 698,58
613,261 -> 226,261
26,287 -> 430,287
640,713 -> 327,713
488,108 -> 488,484
257,183 -> 257,514
851,115 -> 139,115
193,375 -> 673,855
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day06: Input {
		public init() {}
		public let inputExample1: String = #"""
3,4,3,1,2
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
1,2,1,1,1,1,1,1,2,1,3,1,1,1,1,3,1,1,1,5,1,1,1,4,5,1,1,1,3,4,1,1,1,1,1,1,1,5,1,4,1,1,1,1,1,1,1,5,1,3,1,3,1,1,1,5,1,1,1,1,1,5,4,1,2,4,4,1,1,1,1,1,5,1,1,1,1,1,5,4,3,1,1,1,1,1,1,1,5,1,3,1,4,1,1,3,1,1,1,1,1,1,2,1,4,1,3,1,1,1,1,1,5,1,1,1,2,1,1,1,1,2,1,1,1,1,4,1,3,1,1,1,1,1,1,1,1,5,1,1,4,1,1,1,1,1,3,1,3,3,1,1,1,2,1,1,1,1,1,1,1,1,1,5,1,1,1,1,5,1,1,1,1,2,1,1,1,4,1,1,1,2,3,1,1,1,1,1,1,1,1,2,1,1,1,2,3,1,2,1,1,5,4,1,1,2,1,1,1,3,1,4,1,1,1,1,3,1,2,5,1,1,1,5,1,1,1,1,1,4,1,1,4,1,1,1,2,2,2,2,4,3,1,1,3,1,1,1,1,1,1,2,2,1,1,4,2,1,4,1,1,1,1,1,5,1,1,4,2,1,1,2,5,4,2,1,1,1,1,4,2,3,5,2,1,5,1,3,1,1,5,1,1,4,5,1,1,1,1,4
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day07: Input {
		public init() {}
		public let inputExample1: String = #"""
16,1,2,0,4,2,7,1,2,14
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
1101,1,29,67,1102,0,1,65,1008,65,35,66,1005,66,28,1,67,65,20,4,0,1001,65,1,65,1106,0,8,99,35,67,101,99,105,32,110,39,101,115,116,32,112,97,115,32,117,110,101,32,105,110,116,99,111,100,101,32,112,114,111,103,114,97,109,10,928,1690,960,74,66,40,867,580,20,226,21,10,230,23,532,443,260,31,10,387,1050,216,85,307,38,1132,1289,98,1228,20,908,1740,393,321,18,26,389,1002,1347,307,1483,1108,60,1116,1395,56,98,652,745,511,107,806,801,881,1619,404,151,1034,675,393,774,942,771,1027,1609,59,994,300,618,1457,531,491,1470,1089,536,229,150,46,0,310,1114,924,414,163,333,1797,390,240,10,576,421,452,235,26,1128,137,260,92,1174,757,1040,265,70,658,913,72,21,144,1567,1471,956,375,63,1633,862,664,1039,6,1318,624,169,667,523,449,1130,1314,0,860,0,599,209,14,389,875,414,368,843,424,1094,173,363,575,1243,296,179,431,587,89,80,274,202,752,317,829,1116,8,83,371,556,21,1042,270,521,374,76,0,274,417,147,1415,356,1717,1281,184,667,1169,1185,1881,376,448,92,1252,25,98,1563,535,14,180,327,341,1231,1160,253,1530,1513,152,382,69,528,1417,300,5,966,1412,1329,1527,109,416,172,1073,216,315,357,446,106,279,351,56,1097,303,867,1447,768,766,9,226,761,27,229,35,286,358,205,36,176,233,800,1839,268,321,30,280,105,21,315,1265,0,1172,208,352,120,673,693,449,670,246,15,380,67,168,408,364,1115,1018,601,265,59,52,329,1277,19,4,706,66,776,25,202,356,343,375,27,339,1424,418,184,232,522,83,176,61,646,1150,433,120,33,1380,348,486,669,1049,161,1372,817,13,387,629,808,504,291,119,217,806,177,228,487,872,420,803,19,386,1398,35,1509,955,213,1385,40,184,820,404,1670,723,613,1443,982,263,75,652,57,833,991,296,37,62,1093,1727,8,298,717,206,4,470,170,830,150,350,145,690,180,858,334,20,679,9,37,552,959,71,32,214,344,5,27,1810,628,1622,476,1255,330,552,334,785,212,17,1062,491,41,261,60,241,1479,502,28,1561,435,22,349,12,373,182,463,222,50,709,484,146,400,630,216,78,1239,1512,56,870,1082,1343,901,45,332,602,176,991,439,639,600,215,14,316,202,1396,672,908,580,805,282,1420,493,216,1686,12,240,1216,797,109,308,224,424,1260,453,673,380,13,3,842,389,1421,350,308,634,187,1707,173,1174,597,562,1020,76,199,579,1045,335,465,37,70,784,248,137,35,466,298,108,1553,105,99,27,875,936,107,1129,609,1144,378,89,549,556,184,1016,11,568,953,8,595,0,670,651,684,172,266,505,103,68,37,392,289,259,1295,7,558,493,1118,13,522,378,595,96,1300,978,578,24,316,4,1316,20,39,194,99,236,2,1346,108,68,317,85,822,602,944,535,54,160,455,954,59,257,1511,232,1377,38,191,104,1336,624,1140,512,1384,332,54,61,207,75,1153,93,550,741,801,13,20,8,1144,567,97,675,1000,10,228,197,51,901,77,521,1871,588,639,670,45,85,843,40,1039,1074,531,1312,60,311,875,1429,917,420,1155,411,218,630,64,374,196,955,917,718,689,900,1419,283,296,529,811,841,459,163,514,63,1150,151,97,919,940,291,873,140,63,922,62,741,260,26,491,731,26,862,180,967,892,546,104,397,293,119,48,46,91,46,1369,73,159,347,13,742,6,103,459,152,533,5,314,825,189,164,9,170,610,156,1420,672,218,1412,1201,1862,202,154,1449,9,32,78,146,1277,281,288,493,31,9,425,633,177,1056,248,711,429,51,370,700,40,69,316,600,187,77,289,39,779,1001,218,1574,1178,260,1206,143,228,1094,810,1098,383,335,36,64,1340,32,536,6,117,55,837,34,273,412,417,741,215,1267,1233,1088,1211,64,6,628,610,213,279,212,274,362,290,191,390,512,1030,892,5,615,575,740,111,119,29,45,439,1342,1167,1239,1304,472,380,56,1599,25,810,1011,21,640,210,558,102,7,270,75,31,134,183,360,270,197,316,6,174,145,326,336,761,703,1344,274,577,425,641,812,11,121,6,506,573,1393,0,287,606,76,595,753,495,669,13,143,241,103,567,693,1661,229,75,96,1521,150,12,562,1107,308,63,258,17,671,13,682,69,280,8,253,970,344,1016,655,489,1073,18,8,1713,96,193,709,112,510,109,118,106,546,241,1388,372,596,900,93,448,209,490,171,615,574,620,42,108,197,784,907,614,490,334,10,369,515,190,809,106,1105,398,423,356,576,83,477,41,1017,480,336,18,277,552,1322,575,449,3,571,123,298,356,743,427,26,305,1708,376,82,296,1341,933,372,35,1052,85,9,454
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day08: Input {
		public init() {}
		public let inputExample1: String = #"""
be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb | fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec | fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef | cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega | efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga | gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf | gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf | cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd | ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg | gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc | fgae cfgab fg bagce
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
bgcfda gecbda abdgf aedfbg eda efcbd ae agfe bdefagc fbeda | ae egdafb ea fcdeb
gfadb fbagcd cagf agecdb adg fdbcg bdcfaeg bcgfde ga efbda | cbfdge dfcebga aedcgb dgbfa
bgdeca agdbe gfb fdbgce bf eafb dfgab efbgdca gebafd dgcaf | gfbdea gfb bacedg adcgf
fbc becgdf fcbdg adcgf edafgb bgec dcgfbea gbfed bc cbeafd | gfacd gcbdf bgedfa cbdefa
ad dcafeb adcef feagc egdbaf aed cadb bgcedf cbeafgd cdfeb | dabc gabefd ecfdb ecgfbd
badcgf gdaf gadbc ebfcg fceabd gacdbe gedfbac dbf df dfcgb | df adfg cbfgad fdb
cfdb dca bdgca efgbad bafcgd fgdba cgdfea cd abdfegc bagec | agcbe adc dabcgf adc
egdab gcefd ecbgd gdebcaf eacb cb bagcdf abgfde dcegab bdc | bc gedbc dcb fgdec
gefa gedabf cfdbea bdfea bdegcfa dgbfa gfd gdcab fg fecbdg | fgd gf dbfage afbdec
fagdb be abdfe agfebdc eab aefdcb acfed bdec fceadg afegcb | be aegcfb efbcag eb
fdce fcadeg afegdb adceg cgafdb de ebcga dae cdagf abdfgce | efcd efacgd edfc afgcd
gefc defca aefbd ec gfdceba dcabge fgcad cae fcadeg bagfdc | fgcad bdfea ebadgcf ce
cdabe dcg cgef gc beadgf fegbd gcbde edgcfb gecfabd fdgcba | dcg deacb fdegab bdafgc
aefc ebcdfa eabfgd deacb ac dac gdbce gfbadce fdeba gcfbda | adc afdbe aefc ecdafb
eabfdg fdgba fac fc ebdac bfcg fcdabg bgdface bacdf fgedca | fdagcb cedba cf fc
db dbg debag fcgdeb gfeba dagfec ceadg bdfecga deagcb acbd | gbdae afebg cfedgba ecdagb
cabegd befcd aefdcb defbcag dgfb gd edg bfgecd gfdce eagfc | dbgacfe efcdg gd bdfagce
abde fbecag gcabde cefdg bgedc bgcea bgd becgdaf gdcfba bd | baegc egbdc cedgf gdfec
gedc eagbd bgadcef aebcdg dfbag eacfdb cabde fgecab ge aeg | gcbeda gabdfec dgecba gea
afedgc deabf gbfceda fg cgdea dgf bdgfec edgaf ebacgd gafc | fgd gfac cbefgad cagde
gfcbeda bfecda dgca ebgacd gbfae ecg gc gaebc cfgebd dbeca | dfcbea cegab cg cge
adefc eabdf bcafeg bd edb fcbeadg dabegc fdbg baegf fgaebd | fcead fcdea fbgd ecdbga
ac bedgc acdb gacbed bfgeadc degcfb aec cafdeg eagfb cegab | agecb gdbec abgcde agbef
cfgbead cfgdeb gafb baecd bg cgdba bgc adcfbg agfecd dcagf | dgcefb bgaf fdbcgae agcdf
agc dabc dcbgef efadgcb ebdgc baefg ac abgce ebdcag facdeg | ecbdgf ac afdgbec decfbg
fgdcb cbdeaf eabfcg cefdb gcbeadf cdeg gc afbdg cfg ecdgbf | cg eafbcd dgec cbfdge
da dbae fdaecb cdebgf afgced bedfc adf cbfeadg bdacf bfcag | dfbec egbdfc bdfca cefbd
abgfced cf cfdbe geacfd bfac bdacfe gdebc bfedga dcf bdafe | bcfa dbfce cf egdbc
dcagb feagbc dbef edafg fagebd bf fedgac fba bfagd dbcefga | fbdga dgafe cfabge fdbe
gbfce bfc acgb fbgaec bc acfedbg gface cgefad bfacde defgb | cbgfe bgfeca gacb degacf
cfgeda bac dbafg dbcfa bdfcage ecfb acedf cb ecfadb eacbgd | gafbd faced dacfb bcef
fbgec eca cbag cfegba ac efacb bgcedf caegdbf fecgad fdbea | ca acgb ebdfa agcb
acgbf cdabegf egbfd dc dacbef dacg gecabf fdc dbgfc dfcagb | dgabecf befgd acgd abgdefc
dagbfc bc agcdf cgbd bfc ebfad dfcba befgac gaecdf becdgaf | cdgb dbcg abfcdg cfb
bdcga ebdgca da cdeafg dac acfbg daeb cdbgef egbfcda bdegc | bcgad adgcbe fedacgb cegdb
gacfeb aefbg fbaegd cedgfb dfcba gc cgae abcdegf gacbf gbc | cfabd debfgac cega egca
abcfeg fdbegc ac bdafgec ebfad fcdae dcga fcged gdceaf ace | gbcfaed ebfda ac gefcab
gefbc gdeacf cag ac acgebf ceab adebcfg bfcag cgbfed bgfad | cga cagdef gac fcgba
gcbe gacfdbe dfgaeb bfecd ecdgfb dfcgae bef fcedg bcfad be | fadcb ebgc cbfda dfcab
ebcgfd dafe adcfg gfacde cfabge bcadg dfc fd fbdaceg gefac | fceadbg fcgabe fade fbeacg
fbacg cef cagebf gacefd ef bgced cfbeg dagcbf fbea cegfdab | eabf fce cdgeabf agefcb
bca gcadbfe ca edca fbgade dcageb ecbgf egacb ebadg dgcfba | cgafbd feagdb gabecd cba
fcebdg cgefb fagbce edcbg bfed eacbgfd cegda db bcd dfgcba | becdg cdbafg bedgfc cgbeafd
fcadebg edbafc cgfda decba egab gcadb gb debgfc cgbdae gdb | bgd agbe eadcbf gdb
cedfa gad ebcfda aedgc defagb gdafceb gebca dcfg dg edgacf | cdfg fadec gedac bcgae
dafegbc dcfbae dce fcebgd egdaf ecadf dfcbag acbe ec cafbd | ced dce ce ec
fegb ef bdcefg fabdgce efd fegdac cbdaf bcdef ecbdg acbedg | debgac edf ef dfacb
afgedb caedbg egfba baecf efgdb gbcadef fagd age cfegdb ag | afbec degbafc fceab eagbdc
cebd dfb dbecgaf gefcb afbegd bd fdcgb gfcebd cgdaf gfeacb | abecfg gacbfe cgfda bfceg
acdfgb ecbga ba ecgdafb deafgc aedgc aedb aecgdb bag gfecb | cgaefd gabce cdgbae ab
be fcgdae fcbag efdbcg ceb cfebg degb cdebfa fgdec gdcabfe | eb dfegc debg bce
fdecg dafgebc fgcae fgd bcfd bcged edbgfc aecdgb fbgade df | afbdecg bgfaed fcged bgedaf
cabd egdfa fbgac bcgafd ebdafgc bd eagbfc dgb fdabg cgbdef | bd bd dbg cbad
fgecba bd dgcbea gfeda gdb geacb ecbd bfadcg efcabdg bgade | dgbae befgacd ecbag afcebg
ga abefc afg fecadbg egfcbd dgfbac edgfac adbg fcgdb gbcfa | dbag fag fgdbcea dcbfeg
geacf cadfe bfaced fg fcdgae fged ebagc cfg edbfgac bfdacg | afcbged efadc fg fcg
cbd cdefbag cfadg bd bfdac abed fdabce dbegcf egabcf ecbfa | gcebdf faegcb ecdgbf fbeadcg
fagcde cgdfa daef acgde ecgadb dbcgf fca eacgbf gcafbde fa | cdage cebfga adceg deafcgb
feadgcb efcag dbfge edba dfcabg ebgfa ba gefbad ebgdcf bfa | abdefg daeb bfa fdgaecb
dgfcea becdfg bdefg abgdfec beg cgedf eb decb bgefac fgdab | beg fedgc egfacd fcedg
fcagbd adbfeg gbeda bgfde ebfcdg dfae gaceb gda ad fdbcaeg | agd gdeba fdgeab ebcga
dbcefa bfaegd fdcb fdeca agceb fcabe cfaged beagdfc fab fb | edabgf gcabe adefbc fba
eac cfgeab agdfc cdgbe gdbefc dabe gefdbca abcged ea agecd | baegdcf bfcegd gdbfce gfcebd
cdbeaf cd dcf adcgfeb defab gbfca dgbafe cead fdcab bcefdg | dfcabe fcd dc cdfgeb
gdcfbe bag dcebg dgabce cfgdba geacb bdea ba febcagd faegc | gcfea dgbfec fecag cefbgd
ebfdgc baecdfg gabfe acbg bce dgabef cdeaf gfabce ecafb cb | eabcf gdfebc egfabc gafbed
dbgacfe adgcf cedafb ecbad bdfe bf egcdab abfgec fab cbfad | bdfe fba bcfead abedc
dca afdcb befagc gacedf dbecf cgfabd da dbag ceabfdg afbgc | da adgb gfedcba dabfcg
fgcda bcgf cgfeda bfdcga gbd badfg cebafdg gcadeb bg dfbea | fcbg geacfd abfgcd bafgcde
cf gacbfe feadcb cdgaeb fbcd fcdae efdag ecf gcabedf edacb | ecabgd gbcfaed gebcad efdac
ae abcefdg faedbg agedf dgbfce gabcfe adfcg dfbge efa bdae | dcfebg fae agfdbe egfdba
fegdcab dgcaf bfd fgdab edcgaf eadgb fbcg deacbf fb gbdcfa | acefdb gdcaf fcgda gabde
ca cefa bgcfed facdbe dgbfeca adc dbacfg cabde edabg fcbde | dcbefa bedfc dfcgab dbfacg
ce bgcedf cgdef gdabfe cabefd dec aegfdcb dgcfa gcbe fgbde | cegb dce aedbfc ce
fcgaebd ef febdac feb cafbd edcfb fabecg acbdgf dfae ebgcd | feb bfe fegacb bafdec
fgdec adcb dfbega afcgeb egcbd db bcaeg beagdc dbgfcae deb | bd egcdab fecdg bed
ad dcaeg edcbag fgbdeac acd gcdfeb afegc ebda cadbfg dgbce | bfgadc dca ad cda
bdegaf egfdb afb acbegdf fgdba af feda bcfgea fbdecg abgdc | fdegb fabecg degabf adgbef
gdfbe gcf gbcda cadfbg cfdbg gceafb dfca badegc cf cedgbfa | fc fcg egcabfd bdcag
fcbag ebdcgfa ce fgaced fbgeca gfbec cgdfba fbgde efc aecb | beac ce cgbfe bfegd
dcgaef gedfb fegdabc eabfdg dgc cefgdb bafdc cg gecb gcdbf | debgcf gbcfd gbce baefgcd
bfacdeg cedgf gfdbec eca edgcfa dbeaf ca fcdea dcebga cgfa | cefgd gcedfa bdfegc aefdc
cdfea ebgdf ab adebfgc bdcegf gbda fab dagfeb ecgabf ebfad | defba cfdea ba ab
gbefcd cbedf fcaed dgfb dacgbe ebfgca fb bfecadg cfb gcbde | eabgdc egcbdf dcgbef fb
afgedb cabdefg afcdb efdgca ef abgde edf ebfad agdbec fegb | edagcfb cdfba efdagc dcebga
dcfg afbgedc efgdb agbfe fde dgbce dabegc gdbfec df fadcbe | dbfeg gdfc efd faegb
ebgdf acfge bae gbafe efdabc ba feadbg bgda gfebdc gedacfb | fbdcge dbag ab bafedc
abedcg dcagfb cf dagbc afc fceabd fbcag dfcaebg dcgf abefg | afcdbg dcfabe fcabg adgcefb
fdbc egabc bfegc fc gbfced aefbgd gfebd gfacde bgdafec fec | fbcd fedbg daefcg cef
bgacde fegad febc gfacedb gebca gaebf bfa efbgca gfadcb fb | bf dcgfeba fdcgeab fb
cgdfe fagec fbace afecdb acg fgcbead ga abfcge bcgdfa ebga | gabcef cfgde dfgcba gcbdfa
bgae ae acegfdb dbfeg dbcgfe ebgafd dfcba cgefda adebf eda | aebfdgc bedaf feabd fbadc
dfagcb cbdgea efabdcg ecdab gceaf daecbf df cdefa fad befd | afd gefca adgfcbe fd
dcfeg acgf aec degfbc ca efbcgda fcdea gfdeac faedb cegdab | egcdaf gebdcf bdaegc aefdc
cgebaf cbdagef cadgb efda degbaf fgbea dbe bgfdce edbag de | de feda dagbe agfcdbe
eagbcfd eag efcad acefgb ag gadce fadg bdgec baefcd aefgcd | bgecd edcfab baecfg ga
adbcfge eadfb faecd ab dba aebgdc ebdgf ecbfda fcba gdfaec | efcad febdg bfdgeca dba
adgfc dfegc cdfeag edf dbecagf fdabge fbgce ed dcea cagdfb | agdfbe def efd deac
cgb bfgde bdcfa fgcbd fgeadbc fcabed befcag cg dacg bgafcd | cg acfedgb bcagfe bdfagc
fcbdge egdac acgfe efgcad fc cdaf gacefbd fcg faebg dcebag | ecdag efcgda fdac dgcbea
dgabef fdabg bcdagef dcfbg fgac adfcbg fc gdbec cbf fedcba | bdcagf dfagb fabgd cf
defc cgafed ecafbg fbdag aef cdgbae gecad facdgbe ef dgaef | fe fbecga gfdba adgebc
gbdfac gcfbd dgceb bcgdfe fedabcg gdfe fbceag eg baced gec | gacfbe cdgebf cge cge
acgdbe cfa gfba cfdab cbgadf cefdb bcfadeg fa fedgac agcbd | abfg agcbd gcfeabd dfcbe
dagebf defcb dgecaf edfbac aecbdfg deacf be aceb bfdgc fbe | ebac dcfagbe feb bcae
gbcfad fadgbce ag fdcegb gbda ceagfd agc cfdbg gfcba eabcf | dagbcf gdacfb dafcgeb eabfc
dbgcea ag acg dbag aegcd bgdefca bdgce ebgfac cgbedf acefd | agecfb abdegc dgcefb agbd
dgebfca cgdfa bgafe eda cgedfa dfage fgdbac ed ecbfda egdc | befgdac daefg acfdg acdebf
fgadce dcb abgdefc cedgf fecdb cb dgcfbe bgdeca gcfb defab | fcegbd cb gdfce gfebcd
cfbdgea ec dacgf fdeab adfec dbce dbegaf cfe deafbc ebfgca | ec decb ebagfd gcfaedb
gd bcegad afdec dgbf efcdagb cdg fgdcba fgadc abfgc cgafbe | gacfb bdcgea fabcg gd
dbega afebdg ca ecabdg deca cfgbae bca gebdfac gfcbd adgcb | cab caed abc cead
cgdbfe ab fgade gefcab afcdebg agdbe dcbeg bdca abe cgabed | ba debgc gcefba cegdab
cdfegb dbafe abdgce cbfgea bfg fg cgbed dfgc bfceagd dgbfe | gf fadgcbe aebgcf cafegb
ecafb efgcab gbdecaf fbega egabd gef dfbcge fg dcbfae cafg | dcgfeb bafdceg agfbe gf
efdcbg fgbca dcgbf dbfcag faebcd abegc afc egcdabf fadg fa | fa afc adefgbc fbcedg
dfa gcdbeaf dgbafe gacfbe dcagb adcbfe febca df dbfac cefd | adgefbc daecfbg efbca bagefdc
aec fecbgd aegdc fgcad bcedaf bdcge gbea defacgb ae acbgde | ae deacg edgcb afdecb
cdab bedgf dcbegaf gdfac bc efabgc fbc cdbgf afgcbd efdagc | cfb fgebca cgfdab faedbcg
ab eacbgf bdfa fcaedg fdebagc degba bcdeg afdgeb dgeaf gab | gfdbea afdb afdb gcebd
acbed bfeacd aedgc aeg ag gdbfae egbadc bacg fcdeg gcdbfea | gdaec aefbcd gae bdaegcf
fgadbc geafb dafbgec ecdb ce bcega deacgf egc geadbc cgdab | ecgba cdbe gacedf aecgb
gbea eb cfdbaeg cebad gbdac fcdae dgebcf fcabgd adgbce ceb | dagecb ebc dagbc ebc
fbeda ga aeg aebgd agfd bdgcfae fedgab dfeacb fbaceg begcd | ga ag afcbeg bfecad
efabcg bdc fedgc adebgcf gcabed cfdbg dfba db cafgb bfcgda | dcb bdc agfbc afbegcd
fbade bcagfe cgfea cdag dfc cfade begcfd cd gecbdaf dfceag | cgda gcda fcd dc
dbcfa bg gafcde bdceafg gaecbf cbg bgde bcgad aegdc bceagd | gcdab eacgdf bg cgb
ecfagd fbadcg fgbae bdgae gbf befc facgbe gecbfad fb eagcf | gabed fb egabfcd facbegd
abef dcabf ecfdba afbcgde bgdfce af acf cagdb gaefdc bfcde | cfadb abef bcfde cgfdbe
acedbf abcfdeg bdceag bgade acdfgb aeb bgdfe eacg ea gdabc | begda dfbge ae badcg
fcda abgef da dea dacgeb fbdae cedfab bagfced ebcgfd cdfeb | bcedf edcbfg dbaceg bdcfe
dgcfba cadeb agcdb aebfgc gdaf bcfdg gac ga fgebcad fdcebg | dgacbf ebdca egfdcb bcfdg
afbedg egbd bfcdag edgcaf gbdcfae afegb fgdae gbf fcbea gb | dgbe edbg bg efdag
acb abcfde fcgead efacd eabfc dbfa ab egfcb bedgac fdcaebg | defca acb caefd acbdge
afcde dbe fbcaed aecbfgd bfec be eadbc afgdbe dacbg gcfead | be ecfb fgdabe aedgfb
fdeacg cbgfa gefb bfc bf gbafce bdefac agefc aegcdbf agcdb | bf gceaf efbg bfcaeg
fdce gacfb agbdec cgafd df caegd gdcefa bcgadef agfbde adf | fagbc fcgdea fd bfgca
gdfacb aebcg ga dgae egfcbda cedbg dbegca acg gbedfc ecbfa | ga eagd eagd edgfbc
cgbdf eb caged aegfcd egb badecg gdbce ecba egfdba dfbaecg | cagfdbe geb dgcefa dafegc
cd gbecaf acfdb cdfg cda gbdface gfbac dgacfb bfade dgecab | dfcgaeb dc bgdacef bfacd
geab fecdb gb feabcgd ebgcda gdcae gecdb gbc afegdc gbfdac | debcga bgdaec dceagb cbaged
edgfcba agd bacd afcdg degbfc acefg efdgba bgadcf da gdfbc | gcfbd dbac cgfdb gecaf
bfca fcbged dfgab cgbadf cdfabge degcab adfeg cgfbd ab bad | abcf afbc gafdb acfb
gc fdgac fgeadb afdcb gecdfa gac gecafbd cabged gfce gaefd | ecbdgfa cag bgfeda eafgcd
eagdc efdacbg cdgbe cbfdg egadfc egb aebc be gefabd dbecag | bafcgde beg gbacde dcbge
ac afbgcd gfdba fabecgd ebdafg bac cfag adgcbe abcfd cfdeb | adbegf egacdb bac acb
cafbed gf gfd cgdba eadfbcg gfdcb gbef cfdbe fdgeac gedbcf | facbegd cbdag fg fdg
fbgcd fadb fcd fd dfcbga decabg egbcf gacdb fcgeda aecfdgb | bedcafg cgdbaf fabgdec dcbgf
gb bcgeaf aebfcd cdefbga cbaef cgafb gbf dfacg gbcfed bega | bg bfacg bdfcge geba
cadfe afbgced aedfcg cebfg aeb fdageb bfcade bfaec ab bcad | bacef bcafe bfgeda baefgd
cgbde abcg cea dbegca ac agced befdgc bgafdec efgda badefc | cae eca gdfae dcega
ab fgcbed agb cafge cegba deabfcg dbgec aedgbc gfadbe bdac | ab bdca cgfedb dgceb
bfgadce cfadg fa cagdfb bcgdf fagbec gfa fbad bgcefd degca | fa ecgad gceabf dcfgb
gfd dcabegf fg cefdg cbefgd gefb ebgdc egacbd gcafdb dcfae | ebfgdc cegdabf cbafged fdg
dfecagb fbag bdcega gecdaf fg cgbad gfdacb fbcde fgd dfcgb | gfd gfd dgbeac fg
gfaed gad feacg dfaebcg deba efgbdc gefbad ad agdfbc fbdge | dga bdae fegbcd dgfabc
agdbc egdcafb caegdb afgdec cbadfg fdgba efdba bcgf gf fga | dfabg cagfdb eadbf cdfaeg
bgefac fecdabg cebdaf de aedfb ade bcefa gcafed bcde adgbf | ebcgaf fbadg ead dea
edbgc dcba egcfbad cfdage abfegd caged ebd bd gdaecb cgbef | cdebg badc edgbc ebcdg
cgfabe dce fcdba efbcg bdcef bagfecd eabgcd ed ecgbdf dgfe | fdcgbae egfd edc bfegc
fgecad gebda ebgcd egc dbecgf ce cbef cgdfb egacdfb agdbcf | edbfgc cdgbe edgfcb bcefgad
geafcd cdage ec cdegbaf gec cgafeb abgcd gebfda gafed dcef | ce gdbfea egdabfc gec
be abdgfc daecgfb bae dbfag gfdeba dbafe gbfeac egdb dfcae | bdge eba ecfgba gcaedbf
bcge gbeadcf acg bfcdga bfcaeg cfaeg gc feabc bfaecd gedfa | bfeac begc fgdbca bgfedac
gfbed ce ced fceabd dabegf bcdgef egcf becfagd gcdbe gcadb | ce ec bdfaceg cdeafgb
gfdea db cfdgbe badc gbaec ebfagc bde dgbcae egbda cbgedfa | badegc cbeagdf bd egfbcad
deabcg egbca agfdbc edagfb abe eb afbdceg efcag becd agcdb | bced eb be bea
ebfgda bgade dbcea geaf gcbadf dgfba eg gcedabf geb cgfbed | edabg ebg cedgfb bgdcfa
fc adgbecf fbcd abgfdc cgfab aedcfg dgcab gfeab cfg cbdgae | fcg badegcf bgdac fgc
edg egbda dafbgec begc aedcb cadgeb eg eacdfg gafbd cebadf | dfgba bdegac cbge afdbec
bgfecad gdbaf afdbeg egafcb db dba fdbace egafb gdeb dcgfa | fcbade fdagbe bad cdbefa
bcgedf ecba bagcef beg cgafed eb gfedcab gfbad efgba egafc | bace fbgdec cbgefa beg
dgfecb fcd edfbag bcfade fc caegd bcgedfa defab caefd cbaf | dbeafcg fc fabed dcf
ceafg fbad cfeba edbca afebdc bf cegbad bcdfge cgdefab feb | gdbecf faebdgc dcaeb ebf
cgdfba cdabf gfedca efgcadb baegfd bcfg fc caebd gdafb caf | cgfb dgcfab befgadc debgcfa
ebfgca abcfe gca bagde bgcae dbgcfa efbadc gcef agefbcd cg | abegc cbfae acefbgd cag
dfegac gedc bcdaef abgfd egf ge fagecb agefd fecdbga ecfda | gbafd dacbef gdefac gef
feb begcdf fcab edcafb bf aefdc gbade bfead daegfc feagcbd | bcfeagd gcdbfe fbceda fb
baefgcd fedcb cfbaed dgc abdgf bdfgc bcedgf gc gcfe aegdbc | ceafgbd fbcdge bgdface efbdgc
fd gbdae bfda ebfgdc edf gfdea caegf aedgcfb fadgbe bcagde | abedg adegb efd fcaedgb
befg gecdb dbcgafe adebcf dge ecfbd bcefdg aecgdf ge bgcda | bgfe gdebc dge ge
cfdgb be aecfg gefdbc bgfec afbdgec cdabfe egbd cgabdf cbe | fbdgc eagcf eb faegc
gfdbae aedcfg gbcfed bcde dbefgac gfacb ceg bdgfe ce efcbg | efcbg ce edcb ebgadf
ba fecba dbcgfae gcab gfcade febdc adfegb fab aegfbc gcfae | adfgbce gebdaf cefba fba
eadbf acfde cfdeab bagfcde bgfcae eab gafdce cedb dbgfa eb | bea fgeacd eb fegabc
ecb baedc ec adbfgc cedf faedcb acdfb fdgaebc agbde aegcbf | fdce cbfdage bdacgf cedf
fegc cefgdb fdbge bfg badgcf eabcdf fg begad dafgceb fedcb | bgf fdbec gf ebdacf
gfecdab gbeac aebd be eacgd ebc dfegca cbagf agbdce bcdgfe | bec ecdga ecb gabec
cb bcfg cgdfa adegfc bca aegdb afcebd gcdfab dbgca becfdag | bc badcgf bca fcbg
gabdce dc fbgdc gbfec cfda fgadcb bafgd fbdeag abdcegf cdg | fcda adbfg cfgbead dgacfbe
ecgab gbdecaf bcfa cdegbf eabgdf fgeabc ba egfcb gedca gba | fcbeg gacbfe ecdbafg deacg
agc bgfca cg cgafdbe dcfg dcfagb fbdag cabef gdbace gdefab | dcfg agbfc bcfea cag
cagb ga dfcga fdaebc fdebga cbdafg gfcbdea fcgde cfbad afg | cbga cedgf cdbfa afdbcge
cafgdeb aebfd gfbeda ebcgdf agcbf egf decbaf egda abgfe ge | bgacf bdfea agfbe beadcf
be agbefdc aedfgc gabfc adgfeb egb efdag afgbe deba bgfedc | fedgacb dcafge bdae ebad
cfbae dcaegf cdbfaeg fcebga efgca cdfab ageb gcbfde ebc be | acfgde be be bcfagde
bafdgce cea gdbcfe ae agecd agcdbe ebfcad agbe bcdeg fgadc | cebgad ecbgd cbdeg gaeb
bgce agefcbd egbcfa eg fadgb bfcae dfbcae egfab gae fdcega | age gafcbe eacfbg gea
fgacde gfaedb ebacf gc gdfc dcbeafg fadge gec bdcgea cgfea | fdagcbe gfdc aefgcbd gc
gb acfdgb bga aedgf bafdg abdfecg gacfeb bgdc bfcad fcedba | fgaecbd dabcf bcdg bg
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day09: Input {
		public init() {}
		public let inputExample1: String = #"""
2199943210
3987894921
9856789892
8767896789
9899965678
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
2101234567895421012347899878510986566799987654567986456995439976789764347996567899989943245679988767
3212349678989533234556998965329877345689976563459874348789598865678953256789456798878894556798765657
4323458989678944345678987895498767234567896432398763212678987674679954103598967987658789987899854545
5434767895587895456889456976987654395978954321239654343459976543458893212367899876545678998999973234
6545878954376789569994345897898765989899765210198785454598865432346789323457998765434789109498765123
7976989654245679678965456789999879878789874334239876565987654321257895444567899876523489912349871014
8998999762156789789876667896899998767678998485346989879876543210456989555678976987634567893497932123
9349678954367899897987788945679999654567897576457899999989655421245678967899895498547679989986544254
3234569765478934956799899235989986543456789986568998789998765434657889878976789999967899878987654345
2124758976589320245698932149898997632367893497978989678999887565767899989765679899878987654598776576
3012347897695434346987894298787998321299912999899876567899998676778998795634598787989876573649887989
4124456789789545459876796987676799420189909898789765456789639897989459654523987656699985432233998992
4245678999899957867965789876545678921467898769678932367896510998992398993212396543549876321012349891
5678989656989899979854345997634567892379999654567891246789439889901987889323987992023986535123556789
6789994349878789998765234598745679943489998323478910345899998767899876778934799889934597943234589897
9899989499765676899632123987658789874799986214599321234567897656789965567895699778899679874445678976
1999878989974565696543034798769899965678974323678932356679976545678954357679986565798989965567899765
0998967976543234987654245679978969878789765434567893458989989324679843234568975434667899876678987654
9876756899432123998768368789989345989898978545679954589998998939798756457789964323456901998789998653
9965645678921019899989479897591299999987989757889765679877887698999887568899877634789212349899987654
8654235677932298789996589976410987999876599968999899898766976587899998679976976545695443959998999765
9843123456893989678987898765329876898763459878945910999954383456789898789897987656789659898787899877
9732012587899878576798939876498985989652345999936929998843212345998769896789699787898798767656789998
7643223456798765435899319987987699876543478999899898987652101236789652945679569898909899854345698999
7654654577899871012978998798998789997667569998778767898767432345678941036789323979212998768767897899
8765766689978989153567897649459898998778878987654546989889543766789632123499214567993459979878956798
9878878794569993254568989432398987899899989876543235678987679879896543334568923456789567989989548987
3989989893498754385678978940987856799923498965432123989198789989987656545678994567899678991098659896
2399899932198765476899567891976545689212567896551029893239899998698769756989389878998999542989798785
1298789431019896589912377899875434978909678989762998789347999879549978897895478989987889659878987674
0987678993234987692101256798754323569998989878979897678956989965432989998976568999896578998967896543
9876543789945698789322345679654212398987898769998756567969978986544997899987679999789489997856987654
5987674599896789896543456898732101987876797657987643456798767897959876791098989987654349876545999765
4398765689789893987664687999654219876565789543498732345689458999899865689989899876543234997657898977
5499876895567965998778789998765698765454698955569821234592345698789654578978789989432145698769987899
6985987953456899879899898999876798654323457896898930123591234987699943589965679998743456789898986789
9876798912347998765912997898989987743212348997987651234989959877578892397894998999656567899987775679
0997989543458999894323986967999876532103456789999875445978898766456789456953877898767678999876544589
1299878994569789989499875456892997944212347897899986599865799954345678967892366789998989988987323699
2986566789689679978989764345891299894333458956789797987954689876756789898901345998999393976543212789
9875445999794598867878973226789989789546789545395679876543499989767898769219459897893212987654304589
8764329898943987654569543015678975689987998733234598765432359999898998654398998776794343499875423678
9865498787892198733678952123459954578998999710123499876745678931999999965987687675989954569765434567
9876997676789989421789965234599869699129987621234589987956799210198989878996576534679895679878545689
1999876545678976562597894345789998989012398542349678998767989321987878989965432323456789989997657894
0989987434579987673456789456899987678994987643498989989899878999876567899875321012348995699989769943
9876543212389998984567896567929876567989998754987899976998765689765459901987632123467894329878998952
6987654343578919987678987678909765458678999869876789765459976789979878929876543248978965499768987893
5398765454689101298799998989996543234567892978975678975234989892989989439998656767899996987659436789
4239898765678914459899999899987652123478931999854567894125999943498999997899767978999889996543125697
4146999876789323567999898798998783235789949876743569993235799857567899896989978999998778987621013456
3256789998895437678998765656989854345897898765412398989349979768978998765679899123987656798842134567
4345892349976545789899654345678965656976999989324987878998768979989997654568788939876545987653257878
5457943456997656896798775457789876767899895495439876769987657899995986543234567894998756998764567899
6798954599789767965679897668999987898998789989598765459896545989894398732125679943239867899998778989
7899769987678978976789998789789998909989677679999894398765435679789496521014678994956978910199899678
8978998458569989989899869895698999319876586567899989209876546789678987433123489589897989329987934569
9567987353478999999998756934597998998765432456789979912989656892569876554439593476799998998996549978
3459876212347898989765542129986767899965321245999867893498778921456987675678902345678967987897997899
2999965423456987679654321098795456799876442456898979994589989210378998988789213456989456976799876989
9889876834579876567999532197664345678998593567987696987678994321289549099895324567894349865798765678
6778998748698795457888943498543235689999989679996545698789976562458932134965435898999298954987654599
5465987657798654323567894999860134999899878989988434569999897673567893245976546789998987893498785699
4344598788987643212456989876543239898768768999876523459998789994678954369899677899987656932349896789
2123459899999876301345678998654398767654356789985434578999656789789765498788998999876547899456987899
3234569998998765212346799029795459654321237898899565989986545678993987989657989998932123468967898989
4349678987999654357856893234987598765434548997698977899995434578932799878945678987659994567899989878
5458789456898765678977954345698679876576656789567898909876523457891698767236789898798789698945678969
6569996568999879789798995458798789987989789895457899212987612356943497652179998799987689789996989654
9878997979899989897629789567899890198999996942368994323998723457899998741067896678976578999989899543
5989998989789992987545678998976931239789965321236789439876534569998765432359954599987429678976798954
4597999896599891297656789679999842345679876433345696559987676678999876543878963989987634567895657895
3456898765456789398767896543987653458789989874576789698798787889898988764989879879876545898943246789
2367999854346789999878987632198785669894498765689898987659898998787899895699998765997656789532135892
1567998765235899898989876544349997978912349876996967898749999879656689987789889954398767898643234943
0346898754346798767899987655498899899103567987895456789898789765434578998996779893239878987655345694
1234789765457987656789999776987768789214678998954323899987678976655689999545656789123989699867458789
2345679876567898778999976989886547678925889329765834789986567897896999987432345679954694569878569899
4456989989678929989129965498765636569996789409876745678976458999989899876541234578895893456989678978
5768993599899219991098799597654325458987993212988876799986569998978798765410123456789932597898789567
6978987678923998932998678998765212346798954323499989895697678987665659898321239967897643789999899434
7989698799019897899897567979854303467899766534567897914598989976544446996543998798987654679989978921
8996549997998786789765434567963214679998987645698976723459391985433234987659887689999767789876567892
9989239876892675778976323678977634567897898756989895434569210986321013498798756579899898899983456943
9879959865781534667895434589876547679946789869876799547678999875432125799987644467799999999832169659
6567898774210123456789645699987658789434578998965978956789987986543234589876532345678989398743298998
5456987654321434597998756789198767896545689987654568987895456599654565679874321567889879197654997987
5323498767434545989899767899239878987956789898543459998954343498765696789965452378998968989769896596
4212999998545669878799879998945989599897898765432368989768212349876789891986565459987957679898789498
4345899987656989765678998987896792498789999974321245678965401234989899932987876567896543599987678989
5786799998767998954789897676989899989678898765210176989876212345698999743498987878965432789876564879
6997898989878987323456789565678998878545789896325237891995454597897898654569898989998543679876433768
7898967878999976212345689434989987567438699965434346990987566989986799765699789995987654567984321057
8989655567898765303458796579898765432123578986557656789799679879865689897987678954398786788985432348
9876544466789873214567899698798765321012459987868867897698799767654799989876567943219899899876543456
8765433345678984323678998987659876432133569998978879933569987654423689876987678955323999976987656567
9654321234589995644567897898243998873244567899989989212456798743314578965699899876456789765398797678
8765430355679876789678976543012397654356798935697694302345989832105689654556998987987897573239898789
9974321366789987899899987632123498767459899224599543213459876543216798532348967898998965432145999890
9765432377890198975910199743435679878567892101987656323567998765323897621012345999249986551026789921
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day10: Input {
		public init() {}
		public let inputExample1: String = #"""
[({(<(())[]>[[{[]{<()<>>
[(()[<>])]({[<{<<[]>>(
{([(<{}[<>[]}>{[]{[(<()>
(((({<>}<{<{<>}{[]{[]{}
[[<[([]))<([[{}[[()]]]
[{[{({}]{}}([{[{{{}}([]
{<[[]]>}<{[{[{[]{()[[[]
[<(<(<(<{}))><([]([]()
<{([([[(<>()){}]>(<<{{
<{([{{}}[<[[[<>{}]]]>[]]
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
{{[([{{[<{{<[[()()]]((<>())[<>[]])>{{{[]<>}[<>]}<[{}{}][[]{}]>}}<<<<<>()>>((<>())<{}()>)><{{[]()}{()
{<<{({{[<<[<(<<>[]><<>>){<{}()>[{}()]}>]{{[{{}{}}([]())][{[]()>[[][]]]}<(<{}()><<>[]>)>}>>{[(
[[<{<{{{([[{[[{}()]<<>{}>]}{{<(){}>{<>}}{{<><>}{<><>}}}][[<<()[]>(<>())>[(())([]())]>]])<{
{<[([[<<<(<<<<(){}>>{([]<>){[]{}}}><<[()()][{}[]]>[(<><>)[<>]]>>){[<[<()<>>[[]()]]<<()[]>(<>{})>>[(([](
{[<(<<{{[[[[(<{}()>[(){}]){[()()]{<>{}}}]]]]{([(<<[]{}><<>[]>><[{}[]]{()[]}>)])([<({<>[]}({}<>))([()]({}[]))>
(<[{<[{([[(<<<{}<>){[]<>}>(([][])([]()))>[({()[]}<{}<>>)<{{}<>}{(){}}>])(([{{}()}<[]()>]<({}<>)(<>
{[<<((<{([({([()]<()()>)({<>{}}<[][]>)}<[{(){}}](<<>>)>){<[(<>{})]({(){}}<<>{}>)><{<{}()><[]()>}>}
[[([{<<(((((({<>[]}<<>()>))((({}{})<[][]>)({<>()})))[{[[()]{<>[]}]}[(<<><>>{[][]})({<>[]}[{}<>])]])[<{<
(<([[{{<((<<[(<>{})]<[<><>](()[])>>>(<<{[][]}([]()))>)))>}}]])[[[({[(((<([{}<>])[([]{})<()()>]>))(<<[(<><>)<[
{(<([<[[[<<{<<{}[]>>}[{(<><>)[{}<>]]{[[][]]<[]<>>}]>[<[<()[]>[{}()]]<([]<>){<>{}}>>[{{()[]}([])}[[[]]]]
({{<{(<(({[{{<<>()><()<>>}}]}){[{{(({}<>>)}}<{<<{}[]>>}>]})((<((((<><>)[(){}]){<(){}><{}()>}){({(
[(<{((<[{({<[<{}><[][]>]<{[]<>][[]()]>>[[[[]{}]](<{}<>><{}>)]}({{{[]()}[[][]]}[<{}[]>[{}[]]]}{(({}
(((<<[{{{{{{<[<>][<>[]]>)}}}<<[[[[[]{}]<[]{}>](<[]{}>)][(<<>{}>({}()))]]([[{{}{}}[{}<>]]{{[]
([<[<({(({<{[{()[]}][({}[]){<>{}}]}>{{{[[]{}][<>()]}}<(({}){()()})<[()<>][()]>>}}<([({<><>}({}))({()()}[
<[{<[{{<{(<{<(()[]){{}{}}><{[]{}}{{}()}>}<{[[][]][<><>]}<<()}({}())>>><([[[][]](()<>)])>)(<([<[]<>><<>[]>]{
<((({{<<([[<{({}<>)({}<>)}{[<><>][(){}]}>({[[]][()<>]}<([]<>){<><>}>)]][{{{{<>[]}[{}()]}[(()())<[][]>]}{
<([<[[(<(((({[{}[]][[]<>]}<([][])<[]{}>>){[(()())({}{})](<<>{}>)})))))[{[({[[{{}{}}({}())]][
([[(([{([[<<{[[]()]{[]{}}}{{<>()}}><[<()()>([]<>)]{<(){}>((){})}>>({(<()<>>{()[]})}[(<[][]><[]<>>)]>]{
(({{[([{({{([<()<>>{{}[]}]{({}<>)(()[])})}((<[[]]<{}[]>>{(()<>)[{}<>]})[(<()()>){{()[]}({}()]}])}{(([
[[[(<[<{{([[[({}[])]({(){}}{<>})]<[<{}>]>](([[<>()]{{}{}}]{<<>()>[<>[]]})((({}())<{}()>)<<[]{}>>))]}(<<(
{{([<[<<({({[[{}[]]<[]()>]<{<>{}}[[]<>]>}(([{}{}]{{}<>})[<[][]><[]{}>]))[[[{()[]}{<><>}]]]}<
{([<[<[{[(<{([()()]<[]<>>}<[()()]<()()>>}<{[[]()]<(){}>}([<>[]]{<>()})>>[[((<>[])(<><>))[{{}()}[<>[]]]]<
<{<{((({[[[<{<[]{}><()[]>}>([<<>[]><<>()>]<[<>()][[]<>]>)]]]}(<({<<[(){}]><{[]<>}[{}[]]>><{{[]{}}((){})
[{{{([{[([<[({[]{}})<({}<>){<>{})>][{{<>}<<>()>}<[<>{}]{()[]}>]>{{[[{}<>][<><>]]{<{}()><[][]>}
<<{<<([[([[(<(()<>){[]()}><{<>[]}<<>[]>>)]{<(<[]{}>((){}))([[][]]({}[]))>{[({}[])(<>)]({()()}<<>[]>)}}]
[[([{(([(<[({({}[])<{}[]>})(<(()())(()())>[{<>{}}({}[])])]>[(<<(<>{})>[<{}{}>[<><>]]><<[()()]
[[{{<<((<[{{<(<>[])(())>}}<{{<()<>>}}>]{{<{<[]>(()[])}(<()()><(){}>)>}(<{<{}[]>(<>())}[<()()>{<>()
<<({<<([({((({{}{}}<[]()>)([{}{}])))[<[<<>{}><{}[]>}{((){}){{}{}}}>(<((){})<{}[]>>([<><>](<>[])))]})[
{({<(([[<{{<[<()>][[[]{}]{<>{}}]>[[[()[]]({}<>)][{[][]}{[][]}]]}<<{[()[]][()()]}[({}{})(<>{})]>)}>{[[[{
(({[[<(<[((<(({}[])([]()))<(<>[])[()<>]>>))<[[[{{}[]}<()[]>}]<{{<>[]}{(){}}}>]>]{[{<<<{}<>
<{{<<[(([[([<{[][]}<<>()>><<<>>>])<{((<>{})[[][]])({{}<>}<[]{}>)}(<<{}{}><{}{}>><(<>[])({}<>)>)>]]{<<
{([[<<[({[<(<(()())><{[]()}<()[]>>)<<([][])(()[])>[<[]<>><<>()>]>><{([<>[]]{{}})<{{}[]}{<><>}>}[{{[]}{[]{}
<{[<<(<[[<{(<{{}[]}<[][]>>{[(){}]})([({}{})<{}()>]<<()><{}>>)}>({<{([][])}<{[]{}}<<>{}>>>{(<[]
{{<[[<([[[{[[{<>[]}<(){}>]([<>[]]({}<>])]{<[{}()]{{}[]}>[<{}()>(()[])]}}<{[((){})]}([({}<>){<><>
([<([{<(<[{[{{{}<>}[()<>]}<<()>{[]<>}>]}[[[<<><>><[]<>>]{<{}[]>{<>{}}}]]](<([<<><>><()()>][({}
{{{[{[{([([<[[{}<>]{{}[]}]{<<><>>{{}<>}}>][<<[[]{}][()()]>{{[]}{{}{}}}>{[<[][]>[{}<>]]{(()<>){[]
[<{{<[[[[<{<({(){}}[<><>]>({{}}<<><>>)><({{}<>}[[][]])(([][])(<>{}))>}>]<[(<{[{}()]{()()}}<((){})>
{<<{{<{<({[{{({}())<{}{}>}[[{}[]](<>[])]}<({[][]}<{}<>>)<<<>[]>[{}[]]>>]{{<{[]<>}<[]<>>>{<<>[]>}}}}<
{[(<({([([{[{[<>[]][()()]}<{{}[]}[{}{}]>]}([{{{}<>}([]())}<[<>()](()[])>]{[(()<>)(<><>)]})]<[([{[]
({((<<({{([[<{(){}}<()[]>>(<[]{}>{<>[]})]<{{{}()}(<>[])}[<()[]><{}()>]>]<<[[{}[]]{{}[]}]({()()}[{
{<{<(((<({[<{{(){}}[<><>]}<<{}{}><{}{}>>>]({<[[]{}](<>)>{[[][]]{(){}}}}[{(())<{}[]>}{<<>[]]{()
<<{<({((<[((<<()<>>[<>[]]>{{{}<>}({}<>)})([(()()){[]()}]))[[[<[]<>><<>>]{<<>()><()[]>}]]]>)[(<{(<{{}{}
[({<{{<<{<<{<[<>[]]<()<>>>[({}())([][])]}>>}>>}((([{{<([()[]]{{}()})<<(){}>(<><>)>><(<()()>(<>{}
{[{<<[(<<[(<<{<>[]}{[]{}}>[[[]{}](()())]>)(([(<>[])(<><>)](<[]<>>(()())))[(({}{})([]{}))])](<<({{}()}
<<((({((({<{{{{}{}}[[]()]}([()<>]{<>()})}>}){<{{<(<>())><<()()>[()()]>}}>{[{([()<>]<[]<>>)[<{}(
(([[[{{[{{<<(<{}>{{}()}){{[]()}{<><>}}><[({}[])<<>{}>](<<>{}>[{}[]])>>([<<[]{}>[()<>]>[([]()){(
<({<{<[({{(([{{}()}[[][]]]<{()<>}{<>()}>))<[[({}())({})][{<><>}<[]()>]]{[[<>]{[]{}}]}>}[({{<{}<>>}}
[({{[<[[[[({<{<>[]}{{}{}}>{{{}{}){()[]}}}(<<()<>>{[]{}}>))]({[{<[]()>(<>[])}[(<><>)]]})]]]{<[<(
<<<[({{{[{[(<{()}(()[])><([][])([][])>)({{{}}{<>{}}})]{<[([]<>)[{}()]]((<>())(<><>))>>}{<{{
({([<(([({<<<<[]()>(<>{})><<[]>{<><>}>>{<{<>}{{}()}>({<><>}{[]{}})}>}[<<{(()<>)[{}<>]}([()()]<()()>)>[
[<({{<{<[{{{(((){}))({{}()})}}({[[{}<>]<<>{}>](((){})[[]<>])})}(<<<<()()><[]<>>><<[]{}><()<>>>><<<()<>><<>()
{{(([<<{{({[<{[]}[<>[]]>(<<><>>[[]{}])]{{(<>())({}())}[<[]()>[()[]]]}}[(<[{}()](<>{})><<{}
{<({{([({<<[[[[]{}]{<>()}]{<(){}>{()()}}]>(<{{(){}}({}{})}<<{}()>>>{[<<>()>>{[<>{}]{<>{}}}})>}
{{([<<{<[<([{[{}[]]}(<<>{}>(<>{}))]<<{()()}[<>[]]>{<[]()>([]{})}>)({(<[]><[]>)[<[]<>><{}()>]}(
<((<(({({[(<{[<>[]][{}{}]}{{(){}}}>{{<<>[]>{[]}})){<{<<><>>}<<[]{}>{[][]}>>((<()<>>{()()})([[]()]([]{})))}][[
[<[(<(<{(<<{[[{}<>]]}[{{<>{}}{<><>}}[<[][]>{(){}}]]><{<({}<>){{}[]}>(({}[])({}[])>}[{{{}{}}
<((({{[([<<(<(<>())({}())>({()<>}))({<[][]>([]{})}({(){}}[{}{})))>>])]{<[{[<({(){}}{<>})>{{[{}()](
(<<([<<(<[({(<{}()>[<>[]])[({}{}){<>[]}]}(({()[]}<()()>)([[]()]<(){}>)))(<{{<>{}}[{}[]]}([<>{}][(
<({<(([[((([<<()[]>[<>{}]>](<[(){}]<[]{}>)<[[]][[]<>]>))(([<<><>>{[]{}}]))))[({({<[]()><{}()>}<[
{[{{([(({[{[<[[][]]((){})>[[<><>]([][])]]{([[]{}][<>()]){(()[])[[]<>]}}}[<({{}[]}{<>()})[([]())<{}()>
(<(<[<(<({[[((()()){<><>))[(<>())(()())]][[<<>{}>([]())][{<>()}[<>]]]]}[([{[[]<>]}{<[]{}>}]){<<([]{}){{}[]}>>
[([{(<{[({(([<[][]>[{}<>]]<(<><>)>){({()[]}{()[]})({()}(<>[]))})<[[([]())[(){}]]{[()<>]<[]<>>}]((<<>(
<(<{([{<[{<<[[<>[]]]><<[<>{}][{}{}]>>>([({[]()}<<>()>)[<[]()>]]{<{()<>}>[{[]()}{<>[]}]})}({{[(()[])<[]()
({{<{{[<({{([<()[]><{}<>>]<{[][]}[<><>)>)[<(<>{}){{}()}>(<<>{}>[{}[]])]}<{((()<>)[()()])<((){}){{}{}}>
<{[[{{{[(([<({<><>}{<>()})>({<[]{}>[<><>]})]){<[[[{}[]]{()()}]{[<><>)[{}{}]}]><((([][])){[[]
{[{[[[{[<<{{[[[][]]{{}()}][<<>()>{(){}}}}{{<<>{}>[{}[]]}}}[({<<>[]>{[]{}}}<({}<>)[[]()]>)]>({(<<[]<>>
<[[{(<({<({<([()<>])<{<>[]}{{}()}>>})<([<(<>[])<()()>>(<(){}>[{}[]])>([[{}[]]({})]{{<><>}<<>[]>}))[[{[{}
<{{[[{<(<[((((()<>)<{}[]>)<((){})[(){}]>))][[<[({}<>){()}]<[<>{}]{[][]}>>({[()()][()()]})]]>)>}]<<<(
[<[<{(<{<[(([<[][]>])[((<>()>([][]))[{()}{{}<>}]])({[[{}<>](()())](({}())<()[]>)}<{(<>())[(){}]
[<<[[(([[[({[{()[]}(<>{})]{[{}]<<>()>}}{[{[]<>}{()()}]<([][])>})][{((<<>()>(<>[])){{<><>}<()[]>})<[[{}(
<{<([[[([[{[{{[]<>}<{}<>>}](<{()[]}(<>)>{<{}{}>([]{})})}]<<{{{<>{}}{<>()}}<<<>()>[()[]]>}[{[[]
{[[[([{<([(([[()[]]([][])][[<>()](()<>)]]<<{(){}}[(){}]>[{[]()}(<>)]>)<[[[{}()][()]]<({}{}){<>()}>]([[()()]{
(({<(({[(<(({({}[])({}[]]}([[]()]([]())))[<<()<>>{{}()}>[[()()]]])>)<([[[[{}[]]{<>()}]]({([]())(<>())
<[<{({{<{({<{[{}()]{[]}}<[()<>]<(){}>>>[[<[]{}>{{}<>}]<[[]]<<>[]>>]}<{<[<>()][{}{}]>{[()()][<>]}}>)}{{{[[[[]<
(({{([([{{{[{{{}[]}{<><>}}<{{}}(<>())>][(([]{}){<><>})<<[]<>>[<>()]>]}}{{[([<>{}]<()()>)({(){}})]({(<
<<<<(([(([{[<[(){}]([]<>)>]((([][])({}{}))(([]{})<[]>))}])(({{[{{}()}<[]<>>](({}<>)[<>()])}({{[
{{[<[<[([{(({([]())(<>())}[[[]<>]([]{})])[{<[][]>({}{})}{({}[]){()<>}}])}][{{(<(<><>)([]<>)>([<>()](()())))
[[[(<[<([[{[<<(){}>((){})>{<{}<>>({}())}][<<()>([]<>)>([<>[]]<[]>)]}{{<[<>()]<{}<>>><<()<>>{{}<>}>}<<[[]
[<<(<<({<{{(((()())))<[{()()}(()[])][[()()]]>}[{{(()<>)[[]()]}<<<>{}>{<><>}>}[([()[]]<()()>)(
<<{{{<<{{{<[{<[]()>([][])}<{<>{}}{[]{}}>]([{<>()}({}<>)])>}<<[([{}{}][{}])[{{}<>}(()<>)]][<({}())({}()
[<<<{[{(([<<[{<><>}[[]<>]][([][]){[][]}]>[[{()[]}[{}[]]]({()[]}[{}{}]>]>{<[<[]()><<>{}>]<{()[]}([][])>>}]<{
{{([({<[({{{<{[]<>}{<><>}>[<{}{}>{{}()}]}<<<[]()><<>()>}{(()[])[{}{}]}>}}<<([[[]()]{[]<>}]<(()[])([]{})>)[<((
[{<{{<[[<[{<(([]{})<()<>>)(<[][]><[]()])>[{({}<>){{}()}}({()[]}[(){}])]}]>]]{[<({<{<<><>>}<{(
[[<[(<{[<({[(<{}{}>(()()))]<[<[]<>>[{}()]]<({}())([]())>>})>[([[(({}{}){[][]}){{{}<>}({}{})}]]({<[{}[]][()
([(<[<<(<{((<{()[]}([]{})>(<(){}>)){(({}<>){()[]})<[<>[]]<(){}>>}}}>[{{{[[{}[]]]}((<<>()><{}{}>
({{{[(<({[<{<({}<>){()[]}>[<()<>>(<>{})]}<[<{}()>([]<>)]((<>{})[{}[]])>>({[{{}<>}(<><>)}}{({{}()}<<><>>){[
([[<<{<<[<{(<({}<>)<[]<>>>)[[[{}[]][{}<>]]([()[]](<>()>)]}>][{{[[<<><>>][[{}()]<{}[]>]]{<{()[]}{{
{(<<[(<<({[{<[[]()){(){}}>{[[]{}]<{}{}>}}<{<()>[()()]}[<()()><<><>>]>]<<[<[][]><<>{}>]{{[]
[<({[({{{<[<({[]{}}[[][]])>]>[{{{{<>{}}({}()}}(<[][]>{[]()})}([<<><>><{}{}>])}{[<<{}{}>(()[])><{<
{([[<[({{<(({(()<>){<>{}}}{[<>[]](<>[])}))<[<[<><>]>[([][]){{}()}]]{<(<>())>}>>}[({[{<<>{}>({}[])}<{[]{}
(<<[[[[[<<(({([]()){<>()}}{[{}<>]<<>()>})[{(<>{}){[]()}}]]<<[<[]()>[[][]]]>[<[[]<>]([]{})>{
{[[([({<[{<(({{}()}([]())){{[]()}[(){}]}){[<[]<>>[[]<>]]<(()){<>{}}>}>({((()())({}<>))([()()](
[({<{<{[[{{<<{[]}>{<{}[]>[{}()]}>([<[]()>(())])}}<(((({}())(<><>))))(<[{(){}}([]())][[{}[]][()[]]]>[{{{}()}
[[((([[{<(<<<{{}{}}{()()}>{[[]()]{(){}}}><<(<>())>([<>{}]{<>{}})>>)>[{({{([]{}){<>[]}}{(()
{([{([<({[[[([{}{}]<<>()>)((()())<[]<>>)][<[(){}]<[]()>>[<<><>>]]]<<<({}<>)[()()])<<[]<>><()()
{<(<<{({{([<{[()<>]{()<>}}<[(){}]<{}[]>>>](([<[]>([]())]{([])((){})})((([][])(()<>})[{{}}<(){}>])))}<<((<
([{<{{<{[{<{<{<><>}{{}()}><<[]()>(()[])>}{<(<>())[<>[]]>{{[][]}<()()>}}><<{(()[]){{}()}}>>)(({[[{}
{{(<({<[<([{([()<>]([]()))<<[]{}>[[]{}]]}{<({}<>)(<>[])><<[]{}>[[]()]>}][{{((){})<{}[]>}<(<><>
<({<{[[{[({(<[()[]]{[][]}>{<[]()><()()>>)<{<(){}>((){})}(([]{})({}{}))>}[<({[]<>}([]<>))<({}){<>[]}
([[{(((({{{[<<{}{}>{()()}>({[]<>}[[]()])][{[{}<>]<()()>}([<><>]))}}{({(<[][]>[<><>])}[{[<>()]<[]{}
([{{<[(<([{{(([]())({}[]))}{{(<>())[<>{}]}<(()[])([]())>}}{<{<()>{{}{}}}>(<[{}]<{}{}>><{{}{}}([]{})>)}]){<
{((<{[<<(<([(<{}<>>)]<(<[]{}>{[][]}}[[()()][[]<>]]>){{{[[]{}][<>()]}<((){})(<>())>}{(([]{})<[][]>)[([]())
{({[<{<{[{[<{([]<>)({}<>)}<({}())({}[])>>{{{<>{}}([][])}[<[][]>]}]}((([<<>{}>{<>[]}][<{}{}><()()>])[
{({{(({(<<<[(<<><>><<>[]>)((())<{}<>>)]>{<[<()<>><[]>]{{<><>}[{}[]]}>}>><{[{([{}{}]{<><>})[{
(<{[[({(<{[[(<[]()><<><>})<([]()){[][]}>]{((<>{})[()<>])}]}{[{{<[]<>>{[][]}}[<[]<>><<><>>]}]{{{{
<<(({[[{[<((<[{}{}]{[]()}>{{()[]}<<><>>})([[(){}](<>[])]<<{}[]>[(){}]>))<<{{{}[]}({}{})}(<()<>>[
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day11: Input {
		public init() {}
		public let inputExample1: String = #"""
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
7147713556
6167733555
5183482118
3885424521
7533644611
3877764863
7636874333
8687188533
7467115265
1626573134
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day12: Input {
		public init() {}
		public let inputExample1: String = #"""
start-A
start-b
A-c
A-b
b-d
A-end
b-end
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
qi-UD
jt-br
wb-TF
VO-aa
UD-aa
br-end
end-HA
qi-br
br-HA
UD-start
TF-qi
br-hf
VO-hf
start-qi
end-aa
hf-HA
hf-UD
aa-hf
TF-hf
VO-start
wb-aa
UD-wb
KX-wb
qi-VO
br-TF
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day13: Input {
		public init() {}
		public let inputExample1: String = #"""
6,10
0,14
9,10
0,3
10,4
4,11
6,0
6,12
4,1
0,13
10,12
3,4
3,0
8,4
1,10
2,14
8,10
9,0

fold along y=7
fold along x=5
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
802,891
773,324
1125,3
910,718
433,626
1310,809
840,799
415,74
346,306
1203,817
793,877
18,194
120,554
1016,887
437,238
249,730
212,66
955,457
873,656
607,155
311,820
98,824
769,639
547,172
1059,596
320,273
676,457
698,491
661,535
718,803
212,28
366,642
862,563
298,295
1011,493
370,779
1118,416
1285,576
760,703
22,466
87,570
391,84
1115,737
331,155
1126,773
684,485
334,733
1288,816
681,576
268,191
375,152
142,266
604,596
836,451
763,396
758,140
323,739
851,381
301,877
1261,371
410,116
248,677
502,687
724,565
858,43
430,376
63,117
776,564
612,331
1197,191
331,610
1250,878
460,158
1267,511
719,187
644,838
333,402
470,799
567,379
249,58
1250,68
288,252
1242,117
1007,654
1222,845
1041,519
80,788
206,115
594,530
25,241
643,875
432,191
537,232
263,551
758,717
251,596
62,131
944,611
334,161
659,535
949,40
918,387
679,584
20,437
1044,829
89,252
55,4
851,79
266,513
1262,878
388,206
448,872
945,103
224,327
480,522
228,51
179,663
959,576
241,406
800,210
1044,152
118,677
1248,131
107,15
656,361
1272,731
209,423
1190,106
1082,51
221,716
25,576
1158,655
534,330
1004,880
3,359
1092,23
82,408
45,438
442,866
602,494
1083,814
661,135
269,519
321,178
666,838
952,861
687,530
140,479
1158,522
218,107
349,446
857,481
584,584
1186,627
918,497
102,177
435,767
887,313
266,206
1136,541
1140,173
704,430
787,551
514,31
326,743
634,569
1056,606
1178,264
423,313
316,166
654,501
1285,352
385,453
704,28
864,329
370,227
1179,551
20,549
99,586
1036,400
617,453
1124,740
678,18
97,705
228,70
738,330
1086,376
1069,854
962,327
922,740
1158,186
731,570
1124,708
798,677
388,152
606,430
279,739
179,638
1096,74
527,261
1158,708
435,654
796,31
910,372
820,757
1036,494
435,319
22,18
797,672
656,393
224,791
146,796
386,199
684,35
1131,638
546,107
179,784
989,716
1053,579
361,854
741,358
393,396
455,149
1183,334
1059,74
234,372
377,859
195,135
1179,595
1211,590
258,441
632,620
663,315
1253,599
749,567
875,767
1010,28
760,191
480,372
960,516
1193,570
780,122
68,777
591,707
1082,163
1235,52
880,70
102,269
1303,579
228,731
644,15
743,379
1047,791
1164,796
107,77
918,61
98,180
1287,766
38,88
80,554
1242,453
335,756
160,77
1183,633
1119,353
512,714
112,372
388,812
87,122
259,805
388,490
262,397
5,135
580,789
430,518
440,64
922,737
1212,70
0,85
1169,670
393,498
1235,298
1009,94
890,746
500,477
377,390
191,681
550,373
1104,22
309,523
1261,483
1119,289
343,105
1069,406
120,106
131,807
922,152
1235,148
940,115
567,603
366,611
180,219
426,714
249,282
453,413
1216,777
403,74
894,768
214,382
924,423
1170,863
20,457
1032,268
935,152
862,872
75,52
266,812
470,95
716,154
1130,684
796,414
1108,851
436,107
842,634
975,579
964,434
344,852
758,306
800,684
1263,742
1299,19
1130,675
140,414
144,684
1048,173
947,73
584,310
592,803
582,288
924,689
25,149
231,133
1098,380
840,456
966,115
1267,383
107,655
408,780
726,310
108,3
288,88
1170,480
308,882
503,231
157,247
321,716
113,703
848,416
180,451
152,298
913,91
681,696
902,780
363,821
42,128
875,799
415,372
243,873
597,841
897,58
328,295
1252,471
120,564
421,567
987,807
1101,232
899,873
219,799
266,65
301,800
569,596
967,820
579,74
475,256
944,546
738,784
663,138
70,63
719,707
1228,564
884,731
195,513
335,138
1223,772
288,59
426,395
257,579
517,254
1246,609
453,481
840,266
736,486
808,207
15,7
303,128
917,396
98,714
626,485
792,866
89,364
70,136
1310,85
469,443
448,564
647,756
719,329
858,346
989,135
356,491
1000,779
977,402
960,722
241,506
1179,343
1190,788
319,315
345,371
415,820
124,478
1082,731
266,152
234,746
212,514
830,74
1047,777
1186,346
274,494
363,261
1000,563
430,70
288,194
852,586
870,74
862,51
1305,135
1031,379
300,812
234,592
42,42
1015,82
683,885
1169,84
667,19
726,63
975,138
383,890
683,9
1151,423
1168,714
1096,294
222,191
146,98
1159,187
1203,351
743,772
1116,288
234,522
405,730
900,116
1235,842
411,469
540,380
361,152
1052,441
490,154
1033,259
607,742
363,745
425,189
375,805
1135,691
186,186
716,269
703,600
1004,569
206,51
840,95
627,885
214,858
1021,103
823,516
396,453
924,205
42,766
1088,821
398,63
1130,219
855,143
1091,575
967,522
694,358
435,879
796,303
562,750
1230,554
984,743
569,88
3,162
10,431
780,346
20,325
802,796
433,268
1290,549
634,457
728,288
510,449
99,308
1098,66
1067,873
345,84
1210,875
1288,18
435,369
574,786
388,154
802,236
566,49
1218,144
192,478
1111,149
202,346
631,310
309,371
803,336
743,603
689,628
1043,255
1061,826
514,210
1048,61
944,806
1108,43
1071,372
638,180
1307,535
994,166
378,858
704,464
949,742
82,486
1048,397
206,563
413,806
1164,98
344,115
842,740
1136,820
514,414
366,252
919,329
108,252
594,364
321,807
278,250
1062,385
550,191
224,376
1098,828
1009,800
387,507
172,417
897,88
195,759
131,299
940,667
1163,876
5,359
181,791
731,324
388,404
1086,327
736,106
310,563
174,820
140,863
75,148
957,800
776,106
62,763
398,831
1088,546
1108,100
155,26
1026,563
164,137
830,522
323,162
127,334
676,773
758,754
398,735
572,116
120,788
117,794
961,672
769,255
1208,269
596,504
954,528
289,847
426,742
629,653
574,106
736,277
263,777
1178,630
92,750
299,493
209,232
705,147
1014,301
855,149
405,58
1044,65
503,635
537,324
1007,310
58,471
597,151
147,784
1263,155
440,830
1203,879
1002,882
1203,77
366,806
951,82
1290,457
271,442
716,826
565,252
932,204
954,483
924,695
492,309
1228,486
1235,827
1169,810
1031,739
912,63
1101,662
392,833
1303,586
793,17
693,453
316,728
1088,191
227,814
964,306
527,633
373,701
934,626
249,164
1282,409
124,627
579,148
698,122
764,107
416,768
634,549
1173,472
654,395
1047,117
1001,810
1115,513
1190,554
1087,194
661,807
1022,835
216,494
385,285
629,696
263,117
546,227
152,74
1009,17
497,247
131,595
857,413
1126,438
344,779
378,690
1168,180
708,494
1034,718
951,364
835,558
798,180
1056,718
567,324
1211,308
954,366
922,404
905,58
592,579
1116,630
1218,808
1272,806
862,330
723,581
797,222
1250,157
716,812
835,256
895,74
541,639
351,128
959,878
940,43
388,42
1072,320
862,42
1131,663
152,655
1247,859
1183,261
377,483
694,194
426,163
512,441
147,22
587,581
612,212
137,640
522,264
345,362
1310,533
932,690
612,213
18,700
1213,705
514,479
925,823
400,718
1179,147
142,180
448,22
266,240
159,516
154,417
20,264
966,779
934,644
1076,302
1056,288
64,509
175,411
1163,448
378,158
842,186
626,859
92,144
979,854
800,642
701,456
884,742
348,567
1235,746
1022,59
135,737
346,460
918,507
1307,827
1178,712
651,359
428,105
1115,381
49,479
1299,875
730,789
596,639
463,737
828,417
1007,128
654,499
1206,73
326,151
489,357
452,346
508,763
354,364
218,787
966,563
1131,231
514,415
862,778
676,569
359,140
584,383
915,805
914,117
830,372
405,612
1001,523
965,810
1017,152
1285,149
1031,600
932,288
708,400
487,378
1295,455
880,824
979,40

fold along x=655
fold along y=447
fold along x=327
fold along y=223
fold along x=163
fold along y=111
fold along x=81
fold along y=55
fold along x=40
fold along y=27
fold along y=13
fold along y=6
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day14: Input {
		public init() {}
		public let inputExample1: String = #"""
NNCB

CH -> B
HH -> N
CB -> H
NH -> C
HB -> C
HC -> B
HN -> C
NN -> C
BH -> H
NC -> B
NB -> B
BN -> B
BB -> N
BC -> B
CC -> N
CN -> C
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
BNSOSBBKPCSCPKPOPNNK

HH -> N
CO -> F
BC -> O
HN -> V
SV -> S
FS -> F
CV -> F
KN -> F
OP -> H
VN -> P
PF -> P
HP -> H
FK -> K
BS -> F
FP -> H
FN -> V
VV -> O
PS -> S
SK -> N
FF -> K
PK -> V
OF -> N
VP -> K
KB -> H
OV -> B
CH -> F
SF -> F
NH -> O
NC -> N
SP -> N
NN -> F
OK -> S
BB -> S
NK -> S
FH -> P
FC -> S
OB -> P
VS -> P
BF -> S
HC -> V
CK -> O
NP -> K
KV -> S
OS -> V
CF -> V
FB -> C
HO -> S
BV -> V
KS -> C
HB -> S
SO -> N
PH -> C
PN -> F
OC -> F
KO -> F
VF -> V
CS -> O
VK -> O
FV -> N
OO -> K
NS -> S
KK -> C
FO -> S
PV -> S
CN -> O
VC -> P
SS -> C
PO -> P
BN -> N
PB -> N
PC -> H
SH -> K
BH -> F
HK -> O
VB -> P
NV -> O
NB -> C
CP -> H
NO -> K
PP -> N
CC -> S
CB -> K
VH -> H
SC -> C
KC -> N
SB -> B
BP -> P
KP -> K
SN -> H
KF -> K
KH -> B
HV -> V
HS -> K
NF -> B
ON -> H
BO -> P
VO -> K
OH -> C
HF -> O
BK -> H
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day15: Input {
		public init() {}
		public let inputExample1: String = #"""
1163751742
1381373672
2136511328
3694931569
7463417111
1319128137
1359912421
3125421639
1293138521
2311944581
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
9117126765954991531361287887952293985228945954968719768599113229933177321218646689996911474536732399
9223759878952221676171579911799962387979151219995716217699696127938673831489291395696919969932254989
3541576911128155121299113222129549287959588382622619513719133924151162841285778821288275724961119944
6559133231375896721321444531355921461395859117937697179547219275288311254734149251973431135281269159
1676267562819916395689997881982992332424111621435132141259871861542693472992135679917192317774293128
8249139898167999696294834861387663883158627396569381992149353912931121947619234731324959354465133393
7357179973989691178482439911993891132125811578668959789312252688675899921989453929516192661843919197
4619696469916668547597358979211912998111859144138732228282162541629959265225279899275869118746211343
9953447549477253881796188328361584296836894253681673583298151169375142116172299791649833153199728127
6746781992592141396343937891111468593431876292615191122987921959192389783817917672173839828296719999
9138943966124123291819332993929628638169993945962128621134717995149146955791514983198995871433119683
5819163188981382448685489916367822515728379179272999893692949943661458236153872599999471496119999333
9719423138538191938542116779987951211999142299782419116287869943982658286621789697471829675879813256
9699181696126359195481558113952858412929919992895921913238884884827387595171659273872138379679533591
4993982621563681889939627931477941336198842897212192543931489597746158398239126972227589994828192999
2668741998199239119999431871112499961947311948258837213919913418234952325331319559453486297114898498
1127639615295239423919963661998995345216641693977915377189312819154824929848524771848827299135811811
8368387172119721672588279993639478972511318945923156162231548169532294139882492179811534898824293433
8783398963998292816524668577741241713481448273631853599957636719273318298313692157194988481619656618
2953756999862932299821112664281972119127941479853941118579781188619286791413589268314233994924958219
3721595414181516593884399118999691998316513129665554615276617573518961968693226371972761423831798176
1991694811958961555928271245541174192885889591799159659816793825199835199263296631112197219243356537
8252659533163973655722922376235699717495344481141662818711913921134614993948299831832153649939699789
4991481114394946826713119671181783791173994371435189998492951985177386891322761246115321579813246554
6993696939393598438941581694619582924588531988611314975227128981355369857749392159437189417619958138
7225751179695254891295269821492811764941719129614841461722979146177892692799164911833219318964591993
1333799929651611111256382193432394899779926422481315934699941139983894338331242127329982789394316531
8837481279123791791511293941173182698413296717121319418188693999815688934899313263953713912168172818
2715518187177668788558311556248368519817398834879452159637191987847374713799691792778685985151183163
2259918816199912192975991922626992158899968292179154972119897541183344185545199271144885417852464384
4896829916982297819936288191299877891985362698715838913823274968133179284798911359494966988815194363
2129324329198744948237831472389914912531592491971717854718183863949418918119729287219911292886619189
1475996352848299913587823871858259582986232951986536913528821944878682992979346487316611181412119533
8788926799919935991369615497631215917839967981681589392981969115279279799512993478671319169869899122
9742798185239991887978461721361783139999411599389459591792941389692391799791168329923823769316152161
9173764598521995899121318191935619363699465981899276491962199879816415838819753987163171115742984632
7731396437141244238124389792786718327351712492271297983335154292724119492723817435886686622726342678
9614311948611819439192193259859494925678221999836116159691926837722999383959859996122151658985129189
9122652146647862919899432718742622765273781311965998133187119169243998185815214999623989171991112561
2991149875591574422711878572239393988875812296611285397519895686411153557723621141397739842873293893
2911712393758279823638782882718181196128199519455914978868511911598985898293181751711911218642216689
1793818819191888913194513765514877471931431423191639139334319868989124214159551117358829997181729622
9949357949267411491772862121912417767853191411964865383988989611452288776982343996113214944462969295
7749547939932999936999429979727961593311762124797241581688731949186682939476917299694545222196819348
1569668325497998539641217919697391265847199126799274979992177877339999721187338499385894391688757142
4377839628315395229914399726112147897399599948122361917993319944114926999815642921981378665997811872
9967919912939795941911874237196684126623211793151918221173577223365897891296638491193191626818926319
6127813499273598122265983738469915367119615465748387155399948195258986878198325321289565931794369882
3692358924999677389297641337293459814384114353897968978424818882635937221462858992492131591882224132
1117153982194132689989432355215193973386193185519916139659867292519312272981167852196787981294159611
2913296211744741423151491188919997626898296293139158939389496861563476184972948824111324969285978154
1128929154921239399482171919616671311149987887281336195251291973881413496248383216161516996491666581
6231424962123952786834891961579891914968821849776946573698886133237873812968796971699337136691824314
5768145442163769781144449818193919983511191477119947369512899413814156936149842825958595364526718158
8319371581711189818471818895122114868875787691911889164956117362787871116899195295199538719355396986
9211851663274989616961671498242498986691547331875596867296989919173763994774977221229869868132965914
5732195914183159346434492634332849997214425121875559893991761889284193689378889285997478557427216191
4919594673997161317368638349972858474699479813292211191216314518583592781129989799717793478599178914
1212816992918491286133111869816588759854919992955644799971992763518799489378127378198842317125143175
9817119772978993827939981311825351117249291295672398359748996481799455529661331151988374128717911198
6959979697456791979798577971695957796829731637773612123812799821266989181491797352197987941284655891
1829894844699799799164192911889898589226224122828488548798956836828955569942827199983734198167711532
5916952789378491793328318724924815938918116221429399311731729455882819747879189851265198441116437193
2316593981955647388164661498291113142494888583381924456899524788279716191973597227394711639844831189
3881981741112295799319415597319199117187845593977913194841473581279361128428681978861181928158967816
3939242263819932783519851991511688491453123846164148517221781892992125524717372977117928596861679911
4641477457412251293698829869979122228625995879148499396737898889638982142482362649629364938991956974
3417666478142114314819128729451691124979739715435211656911679678126199443145439652619914181916916386
9197964843859986424199652481919639895555559646793968117224461359121927495439994851589194986745767199
1191146713643837513938479919124381959615799437231597888611882549928192193269491499894796168339169992
6979872799843753778983789714199378797788991933161979219897497929969121145325613894815531148198861891
2897711394223385969627249728919332712941132392931181791715591273435311267141292629528963749919974818
2125918421718973999673882616938889788112781219151398836281824826992487716291785514764768419996341848
8117112532342797719737195144272912273419948528898235213984262216911914853922412891737981226189198334
8882822942993968884139633296571516319764762815264113984968674415659712333797681255649671289971237799
6725141179673886293898974248697199412641236288717399983269493559587293483647122119669723819651859959
1635981511964285563772993596794551919558191915999181325192193378685931492329192296325893816297868828
2991842229168849265454541381722475797132627864721153611229176825219361112214114198745615199522814789
9662196198292971249673769196931861972531994792913285496999695698693139738979739822998883371946778731
1181918926984114515911966772399278413751112259425996784855812239818799793738956869624761863966171537
8999378549159336384488325775668744969198921949111299734515923966297588431419993827392872615499467238
8219274184271732972386957524972971338913988119687169636991229178984184952396926742299916161189181478
7841981498859866989959419399266132122945925192193395264118954251326349873819169726719525916228413529
1189765873965613399337499824992558892383441129519167958433888816632944688989791799265757192441191821
1122474698626225978191978983332813388675458997571911911591189133134719817996136961827365281919585249
9519433249611991278178319662998171623744296811698481199481493878654989641277211912555645876224759575
6125712149818157123747721394932661689175392123561445398732981771894674399674385915323594549791118229
9475311931154529515111211948114624455572817339939811952455255144919686927246823239177969193595165495
6922293775128388772696845128455845794498599788218748614476199937135329672919912919134897925229848914
2891219869495424258111637249312515345839111989928477967764594159826818397866381991698227675347949931
9197372475857939168321499153862716767719999947324714971881142347989981393496624535728827564155699898
8294523819699999172283151339392979985525768564995228999556114292196329719229999257932271983447882795
1939243157255769865891729948999177881918547399793134894519417939828591196633959298444827973314731911
2987118759793419159816857586286875932941481119368122639419833371776521998373714251159949852912988542
2899137888528523774811712997118913916121861528375892921143642282799875121339226945497819958922912934
6821975883666159111294417189613823241844761788648899421981336795385271598994988991711356515994498997
1145919998791266421889855551242212544911939312439931545382428359422871391568759927877629148945198935
7928248141712639396631551112398785717846351616999228378691195976769815744656987513118218637488928521
1684838399588648881327586957199874792142167832618795919593955245946215969749317899549939164939781974
8283891211961198885189675761681423122591798322135234799979215759171724989419131318722297222491939131
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day16: Input {
		public init() {}
		public let inputExample1: String = #"""
8A004A801A8002F478
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""

"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day17: Input {
		public init() {}
		public let inputExample1: String = #"""
target area: x=20..30, y=-10..-5
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
target area: x=124..174, y=-123..-86
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day18: Input {
		public init() {}
		public let inputExample1: String = #"""
[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]
[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]
[[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]
[[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]
[7,[5,[[3,8],[1,4]]]]
[[2,[2,2]],[8,[8,1]]]
[2,9]
[1,[[[9,3],9],[[9,0],[0,7]]]]
[[[5,[7,4]],7],1]
[[[[4,2],2],6],[8,7]]
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
[[2,[[1,1],9]],[[0,[3,0]],[[1,6],[4,2]]]]
[[8,[0,5]],[[[9,9],0],[[2,9],2]]]
[[[[6,4],[5,8]],[[0,9],[6,5]]],[[5,1],4]]
[[[9,[2,8]],[[0,2],[8,3]]],[[[5,6],[5,8]],[[4,8],2]]]
[[0,[[0,1],[6,0]]],[[[6,4],1],[8,6]]]
[[[[8,5],6],8],[[[9,1],[0,6]],[4,[2,4]]]]
[7,[[4,3],[8,5]]]
[[8,[1,[3,4]]],[[3,8],[0,1]]]
[[[1,1],[[2,1],[0,3]]],[[7,[1,8]],[[3,8],[5,2]]]]
[[2,[[4,6],[6,2]]],[[0,5],[3,7]]]
[[[[9,8],[4,6]],[7,[9,1]]],[[[8,7],[4,7]],[[6,6],[8,1]]]]
[[[2,[5,1]],[[0,4],3]],[[9,7],[[0,2],0]]]
[[[[5,0],2],5],[[3,[5,8]],[5,[8,9]]]]
[[6,[3,6]],[[[2,7],6],[[6,0],4]]]
[[8,8],7]
[[[[7,9],3],8],[[0,[1,7]],[[3,2],[4,5]]]]
[[[1,1],[7,2]],[3,[4,[6,4]]]]
[[[9,[6,6]],[[4,8],[1,3]]],[[[4,7],8],[[5,2],[3,8]]]]
[[[6,[6,7]],[3,4]],5]
[[[[0,0],2],9],[[[2,1],1],[5,[4,7]]]]
[[[2,[9,8]],[5,8]],[[[3,4],6],[5,0]]]
[[[7,[9,4]],[7,[7,2]]],[[1,[9,6]],1]]
[[[[9,1],1],[4,[2,6]]],3]
[[0,[8,[3,4]]],[8,[9,8]]]
[[[1,6],[6,7]],[[[0,4],1],7]]
[[6,[5,[0,0]]],[7,[[5,4],1]]]
[[2,[[9,5],[9,1]]],[[3,0],4]]
[[[5,7],[[1,0],[3,5]]],[4,[5,[4,0]]]]
[[3,3],[2,2]]
[[[[6,2],[1,7]],[1,7]],[[[6,7],6],9]]
[[[[9,8],[8,8]],[2,1]],[[8,4],8]]
[[[[1,4],1],[2,0]],[4,[[0,5],5]]]
[[[7,[6,0]],[[7,3],1]],9]
[[[[2,4],0],[[6,9],8]],[[3,[0,9]],[[4,4],[5,4]]]]
[[7,3],[0,[2,[7,2]]]]
[[[[8,8],5],9],[[8,6],6]]
[[[[9,5],7],9],0]
[[[1,4],8],[[7,[5,3]],[[6,4],6]]]
[[9,[[9,3],[3,7]]],[[[6,9],1],[[2,3],[4,4]]]]
[[4,[9,2]],[3,4]]
[[1,[[0,9],2]],[1,[1,[8,7]]]]
[[[4,1],8],[9,[9,[2,9]]]]
[[[[7,9],[9,7]],8],[[[3,0],5],[[7,8],[3,1]]]]
[[[[9,4],[9,9]],[[9,5],[8,9]]],[[2,[7,4]],[[4,6],6]]]
[[[[8,7],1],[6,8]],[[4,2],5]]
[7,[3,[3,3]]]
[[[4,9],[0,2]],[[[4,2],9],[[5,8],6]]]
[[[[1,3],1],[[7,5],[4,0]]],[[[6,3],4],[[1,2],8]]]
[[[[3,2],2],[4,7]],[[[5,6],[6,3]],3]]
[[[[4,0],6],[4,2]],[7,5]]
[[[[9,5],[2,0]],[[6,8],[0,9]]],[[[7,4],[3,6]],1]]
[[[4,[9,3]],[[9,4],8]],[[6,[1,2]],2]]
[[[[4,1],[1,1]],[[4,8],9]],[[[1,0],[0,3]],2]]
[[[3,[3,8]],[[0,6],7]],[[2,5],9]]
[[[0,[6,8]],[[2,7],[4,1]]],6]
[[6,3],0]
[[[3,[7,1]],[3,[2,0]]],[[[3,5],9],[[5,2],[7,8]]]]
[[7,8],[1,[[7,1],5]]]
[[[9,[8,9]],2],[9,[[8,8],4]]]
[[[8,[5,8]],[[9,1],[6,0]]],[[[9,1],[4,7]],8]]
[5,[[[4,9],7],[[6,0],[9,0]]]]
[[[[8,8],[6,7]],[[1,0],6]],[[5,[2,8]],[[8,0],[3,7]]]]
[[0,[6,6]],[[0,1],[3,[9,2]]]]
[[1,[0,[8,1]]],[[0,[0,0]],[8,[0,0]]]]
[[[4,[1,4]],[8,[9,5]]],7]
[7,[[[0,0],[4,3]],8]]
[[[9,1],[[7,5],[9,2]]],[5,[9,0]]]
[[[[2,0],9],[8,[3,0]]],[[9,8],[4,[0,7]]]]
[4,[5,[5,[0,3]]]]
[[6,[[6,9],8]],[1,[0,[6,0]]]]
[[7,[4,3]],[[0,6],[[5,2],[6,9]]]]
[[[[7,2],[4,6]],[[5,0],9]],6]
[[[0,1],[0,2]],[0,[5,2]]]
[[[[5,0],[5,4]],[[5,9],[9,9]]],[2,[[3,0],[8,1]]]]
[[[[9,2],[2,9]],[[5,5],2]],[[1,3],[[3,6],[1,8]]]]
[[0,[2,4]],[[[6,9],1],[[7,9],[9,8]]]]
[[[[2,1],1],[7,3]],[4,[[1,2],[2,6]]]]
[[[6,[0,1]],[[6,4],[4,2]]],[1,[[0,0],[9,7]]]]
[[[[9,2],3],[9,8]],[[6,5],[7,[1,7]]]]
[[3,9],7]
[[[6,9],[[0,2],0]],[[[8,6],2],9]]
[[[[2,2],2],[[6,7],7]],[[0,3],9]]
[[[7,[2,7]],3],4]
[[[[1,9],6],[0,7]],[[[2,2],1],2]]
[9,9]
[0,[9,[[4,1],1]]]
[[[[7,6],1],2],[[[6,9],[9,1]],0]]
[[[[4,3],[4,2]],3],[[5,[6,5]],[[2,6],0]]]
[[[0,[5,1]],[6,[1,4]]],[5,[[8,1],3]]]
[6,[9,6]]
[[8,[9,[6,8]]],[[4,9],[[2,4],[7,1]]]]
[[5,[[9,9],[3,3]]],[[[9,8],[5,0]],6]]
[[6,7],1]
[1,[4,[[9,6],0]]]
[[[[9,8],[7,8]],[5,[4,6]]],[[[5,9],6],[[4,6],4]]]
[[[2,7],4],[[[0,3],0],[[7,4],[7,4]]]]
[7,[0,4]]
[1,[3,2]]
[[3,0],8]
[[[3,2],5],8]
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}

	public struct Day19: Input {
		public init() {}
		public let inputExample1: String = #"""
--- scanner 0 ---
404,-588,-901
528,-643,409
-838,591,734
390,-675,-793
-537,-823,-458
-485,-357,347
-345,-311,381
-661,-816,-575
-876,649,763
-618,-824,-621
553,345,-567
474,580,667
-447,-329,318
-584,868,-557
544,-627,-890
564,392,-477
455,729,728
-892,524,684
-689,845,-530
423,-701,434
7,-33,-71
630,319,-379
443,580,662
-789,900,-551
459,-707,401

--- scanner 1 ---
686,422,578
605,423,415
515,917,-361
-336,658,858
95,138,22
-476,619,847
-340,-569,-846
567,-361,727
-460,603,-452
669,-402,600
729,430,532
-500,-761,534
-322,571,750
-466,-666,-811
-429,-592,574
-355,545,-477
703,-491,-529
-328,-685,520
413,935,-424
-391,539,-444
586,-435,557
-364,-763,-893
807,-499,-711
755,-354,-619
553,889,-390

--- scanner 2 ---
649,640,665
682,-795,504
-784,533,-524
-644,584,-595
-588,-843,648
-30,6,44
-674,560,763
500,723,-460
609,671,-379
-555,-800,653
-675,-892,-343
697,-426,-610
578,704,681
493,664,-388
-671,-858,530
-667,343,800
571,-461,-707
-138,-166,112
-889,563,-600
646,-828,498
640,759,510
-630,509,768
-681,-892,-333
673,-379,-804
-742,-814,-386
577,-820,562

--- scanner 3 ---
-589,542,597
605,-692,669
-500,565,-823
-660,373,557
-458,-679,-417
-488,449,543
-626,468,-788
338,-750,-386
528,-832,-391
562,-778,733
-938,-730,414
543,643,-506
-524,371,-870
407,773,750
-104,29,83
378,-903,-323
-778,-728,485
426,699,580
-438,-605,-362
-469,-447,-387
509,732,623
647,635,-688
-868,-804,481
614,-800,639
595,780,-596

--- scanner 4 ---
727,592,562
-293,-554,779
441,611,-461
-714,465,-776
-743,427,-804
-660,-479,-426
832,-632,460
927,-485,-438
408,393,-506
466,436,-512
110,16,151
-258,-428,682
-393,719,612
-211,-452,876
808,-476,-593
-575,615,604
-485,667,467
-680,325,-822
-627,-443,-432
872,-547,-609
833,512,582
807,604,487
839,-516,451
891,-625,532
-652,-548,-490
30,-46,-14
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""

"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day20: Input {
		public init() {}
		public let inputExample1: String = #"""


#..#.
#....
##..#
..#..
..###
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""


#.#...#..##..########...##....#.#.###.#.##.##...#..###.#.##.#.#..#..##..###....#..##.##....#...##.#.
.###.#..#.#.#..##.##.#.####..##.#...#.###...#.#....#.#.###..#.#..###...##..######..#..#..#####......
##.#.###.#.#..###...##..###.#.#..#....#...#..#.....##..###.###.######.####.#.#...##.#.##.####..#.##.
...#..##...########.##..#..#...#...#...##.#..#.#..#.##..##.#..#...#.##........#.#.#.######..#..#.#..
.....###....#.##....####..#.#.#.###.###.##.#.#.###..#..##.#...##.###..#.##..##.##..#.#....####..#.#.
..####..###.#..###.#.....#..#..#....#########.####.#..#.##.##..#....#.....#.#.#..#.#..#..###.##...##
###.#..#####...####.##...####...#.#####.##...##.####.###...###...##...#..#.#.######.##....#....##..#
...#...#.#.###..#.#..#.#.####..####.#..#...#...#.#...#...#.....##..#.....#.#.#....#####.##..#.#..###
##...##..###..#..#...#..#..#.####...#.##.###.#.#....#..##....#.....#.##.###.###.#.....#####.#...#...
.##.#..#..#..#.##.#.##.###.###....##.#.#...#####.#..##..#....###..#.#...##.###.#..#.####..##..######
#.#..####.###.#####.###.##....##..####.##.##.#########.........#.#.....####.##.....#.#...##.#....##.
.#..#.#.#..#.#.#.#.#..###....##.#.##.#....#.##.#....#####.#..###...##......#..#.#.##..##..######..##
..##.####.##.....#.#######..##.##...##.####.####.##...####..#.###....#..###..##..#.####....###..##..
#.#....#...#.#.#..#.#..#...#####..#.#..###.#.##...#####.....##.#....#.#.##.#..#.#..###...#.#.#..#..#
##.#.#..#.###.###.##.####....###.#.##.#.#.##...###.##.#.#...##.#.##..#.##.##.#.#....#.....#.#.###...
.#.##.#....#.#.#.###.##..#######.###..#...#...#####.###.#.#.###..###...###.######.#.#....#...#####.#
####..#..####.#......####..##...####...##.#.######.###.###.#.#.#.#....##.#######....##.#..####..##.#
..##.#..###...##....##.###.#.#.#....#..##..###..##..##..#.####..#....#.#.####..#..##.#..#....#..##.#
.#..#.#..##.###....#...####...##.##..#.#..##.##.##.###....##...##.....#.###......###..#.#..###....#.
###.#...#.##...####.#.##.###..#.....##.#.#...#.#..###.##..###.#..#.#.#.#.#####.#.####.##..####..##..
.....#.#..#.##...#..#.....#.###.##########.##.....#..####.##.##.###.##..#.##..#....#.#..##...###.#..
#..#.##.#.#.#..#....##########.###..#.#...#.##...#####..#..##..#..####.......###..#..#.###..###.##.#
###.#..##..##..####...#.####..##.######....#..#...#..##...#####.####.##.####...######..#..##...##..#
..##.#####...#.##..###...###.#......#.#.######.#...####.####.##.##....##..##.#.#..####.#####.######.
..##..#.#..###..#.....####..#.####.##.#.####.##.....####..##..#...###.#...###...#.#.#........##...#.
.#.###.##.##.#.##.##..#.#.###...##..#..#..#.##.#.#..##.#.#.#.##....##....#.#......#....#..#....##.#.
#####.#.###...###.#..#.##.###...###.##.##........#.###.#...##.###.#...###.##.##..#.##.###..####.###.
#....####.#..#.###....##.#.##..##.....#..#...#...##.#..#.#...#..##.#..##..######.##..####.##...#.#..
..#.#..#..##.##...##.###...#...###..#.##..#.#####..#.#.##.#######.##.#.#..##..####.....#####..#.#.##
#.#.....#.#.##.##.##.##......#...##.##.###..#...#.#........##....#.#.....#.##.###....#..###..#..#.##
..#.#.####..#.##...#.###.##....#.##.#########.###...##...##.#.#....#...#...##.....###.##.........#..
###.##.#.#...#...##...##...##.##.#..#.#....##.#.##..#..##.#.##.##..#.#.####.###.#.##.##....#.###.##.
###..#.######.#.###.##.###..##.#..######..###.....###......#.##..##..#.....##..##.##..#.#....##.##.#
..##.#....#.........##.##.#.#..####..##.#......#....#...##.#####..##........##....#.###...###.###..#
##...###.#.#..#.#..##.#.##.####....###....##.#####.##....#.##...##..#.....#....#...######..#.#...###
.##.##.#..###.#.###.#.#.###...####.##.#.#.#.####.#...####.##..###.#...##..##.####..###.#.#..##..##..
#..#...#####.##...#...##..###.#.#....#.#...#########..##.....##.#.#...###......#.##.########..#.##..
##..##.##.......##..##........###.#....#.####.#..#.#.###....#.#.#.#.###.#.#..##..##...##.#.....#....
....#..##...#####...##..#.###....##.##..##.#....#....#..#.#...#.#####...#..##.#.##...#.#...####...##
..##..####.##....#.###.####...###.#.##.##...#..##..#.###.###.#.#.######.#..#####......##..#.###.#.#.
#..#.#....#...###.#.#....##.###..#....##..####.#..#.#####.#.###.######...#..###.##..####.#...##.#..#
..#.##.##.#.##........#..##.....#.#.#.#.##.##..#..##...#.##...#...#.##.###..###.....##..#....#.#..##
###.##...##.#.#...##...####.###.#...####..###...#.##.#..#.#.###......#.#...###..#.####.##.#.#.####..
#.#.##.##...#..##..#....#.##..##......###..###...####..##...###.#.##.##..##...####.#.....#.##.##...#
.....#...#.##.#..#.##.#.####.#######......##.#..#...##..#...#.###.###.#.##.#.##..#.##.##.#..#.###..#
####...#####..##....##.#####...#...#...##.....##..###..#...###..#...#...##.###..###.#####...##.#....
#..###...###....#.#.#.######.###..####..#####...###..###..###....##.#.##..#.##..##..#.###.#####.....
#.#.##.#.####..#####.###.#..#####.#..#.#.#..#.##....##.#.#.#.#.###.###..###...#####.#.##.#.#.#..#...
.#.#...#..#.##.#..####..###.#..#.########.####......#...##..#####..#...#.#..###..#.#....####....#..#
##.###.###..#..##.#..#...#..####..#.###..##....#.#...######.##....##...#....#.........####.#.###.#..
.##..####.##.#.#..####...#.##..##.##..###...#.....##...#......#....##...#####..#####.#.#.#...#..##..
.#...##.#.###.#.#.##....###..###.##.#.##.....###.####.......#.#.#.#....##.#..#..#..#####..#....#.#.#
..#.##.###.###.................###.#...#...#.##.#.###..###..#..##..#.#..###..##.#.##.#.##.##.##.#...
###.#...#..#...###.......###.#.#..#####.####.#..#...##...#####..#........###.#..#.#######..####.#.##
...#.##.#####.#...##.###...##.#..#..##.##.##..#.#.#.#.###...#.##..#.##.##.#.#.##...##.###....#..#.##
##.#.####.##.#..#####.#.#...######.###.#.#.##.##...##.#.##.#..#...##.##.#..#...#..#..#..#..#.##.#...
#.#######.#..#.##..#..#.#..#..####....#.#..#..#...#.....####...#..#.......#..#...##..##.##.##..#.#..
..##.#.####.#.#.#......########..#..#.....###.#.####.#..#####.##..####.#.###....##.#.#..#.##..#####.
.##.#.##.#.#..#.#.#.#...#########...#####..#...###.#.##..##.#..##...###.##.#.#.#.#...####.#.#.####.#
.#####.####..##.##....#.#.#...######.#.#..#.#.#....#.#....##.#..#.###..#..#.####...###..##.#.#.#.#..
.##..#..###.######.#.#.#..######.##..#..#.######....###.##..#####.....####.#.#.#...##.###.#...##.##.
.#.####..##.#..#.#..#.###.##.#....##..#.#..#####.##.##...#..####..###..#........#.##..##.####...###.
..##..###.#.###.#...##.#.##.##.#######..##.#....#.####.#...####...####.###.##.##...##.#..#.#....#..#
.##..#.######..#.#.##.....######.#####......###.#....###.##.#.###.#..#.#.###.#.####...####.##.....##
.####....#.##.##.#.#....#.##.#..#...##.....#..##......#..#######..#.##.###.#..#.###.####..###.#.#..#
..#.##.#.#..##..####....#######.##...#.##.....#.#.##....#.###.#.#..#.###.#.....#.####.#.....##.#...#
##...#.##..##.#.........#..#..#######.##.#..###.#.###..#.##.#..#...#..#..#.##.##.#..###.###...##.##.
...#.#..###..#.##.#####.#.##...#.##..###.#...#...#.##....#####..#####....###..#.####.#...#.###.....#
..#.####..#..#.#..#.######...##.##...##...#.#.#.....#..#...##..#.############.###.####....###..###..
#.#...#.#.##..##..#.#..#...####.##.##.#.#.#.##..##.#.#.....#....#...#...#.###.#.#####..##.###...#..#
.#....#.##..###.#..#.###.#..#.#..##..##.......########.#...#...#####.#...#..#..##.....#.##.....####.
#.#####.#.##.###.#.#....#.#.###...##.#.....##..##..#.#####..#.#.##.#..###..##...#.#.##.#.#.....#.#..
..###...#.#.......#.#......##.#..#.#.#.#.#...#.###.##...####....######......#...#####..###.##...#..#
#..#...#..##..#...#...####.#...#....#####.#...#...#.#.....##...##..#...#....#..#####...#.....##...#.
#.####.#...#...#..##...##....#...#.#.##.##.##...##..##.#..#..#.##.##.##.#.##......#.#...##.....#...#
.#..####..###........#####...#....#.####..##..#####.##.###..#..###...##..##...##.....#..#.#.###.#...
.#....#.####....#....##..#.#.######.#######.#.##.###.###...#.#....##..#..####.###.#....###...#.#....
...###..##.#.##..#.#.#####.######.#..######.##...#.##.#..##.###.#.......#..#...#.###...##..####.##.#
#....###....#..#####.#..#...###..##.##...##.###...#...#....#..#...#..####.#.####...#..##....#...#.##
#.####.###...#..#.####...#..#.##.###.#.##.#....#..##.#.#...##.#..#.##.##..#####..#..#...###...#.####
#.##.##..##.##......#.#.##...###.####.###.####.#...##...#.#...###..###.######.#####....###.####.#...
##..#.###....#.#..###.#..##..###.#..##..#####.#.###..#.#...##.#.#.#.####....##...##....###.#.#.#..##
...#.###.###..###.##...#.###.#.####.##..#.#..###...#..##.######.#.#..###..#.##...##.###....##.#...#.
#..#.#..#.#..#.#.#.#.#..##..#....#..###.###.#...#.#####.#..#..#.#....#.#.#.#....##.##..#...##......#
...#...##....#....#.##.######.#...#.....#.##..#....#..##.#.........###..#..#..#.##.##...#.#..#######
##.##..#..#.#..#.#.######.##...####...#...#..#..##.#......#.#....#.###..#.###...#...#...#.##...###..
#.####.#.##....##..###....#.##.#.##....####.#.#.##.#....#..#..###...#.....##.##....####..###........
..#..##...##.#...#..#.#..###....##...#...####.....####....###..##..##..##.###..#.....######.........
.###.###.##.#...#.##..##.#.##.#.#..#.#..###.#....###.#..##.###....#...#####.###..###.####..#.#...##.
..##.#.#.####.#..#..###.##.#####.#.#....##..#.#.##..##..#...###.#...#...#...#...#..#..##.#...##...##
......###..#####...##..##.#.....###.#...#..###..####..##..#..#####..##..#..##..####.#..#.........#..
###............#.#.......###..#..##..#.#####.#.##.########.##..####.#.########..#.###.....#.####.#.#
.#.....#....##..#.##..#...#.#.##.##..#.##...#.##.#..#......##.....##..##.#..##.###...###....#.##.###
..#...###....##....#.#...###.###..##.##...#.#.#.#..#....###.#.##.....##.#..#.#######.#.###...###....
##.#.#.#.#...####.##..#.#####..######..#.#...#.#.........#....##.....#....#.###....#.#.#..#...##....
.......#.#.#..#....####.##.##.#.......#.#.###..#..#..#..##.#.#.##.#.##.#.#.#..##.#..###..#.###...##.
..##.#.#..##.##...#..#..#..#..###..#.##..#.##..#..#....#....#.##.##.###.##.###..##.......######.###.
##.#.#.#.#.#..###...###..####...##..##.###.#..#..####.#...###..#.##.##.#.#.###..###.#.#.#...###..#..
..##...####......##..#..#..#...#...#..##...######.##......#.#.#....#.#.#.#..#..##.#...#.########...#
####.##.#.#.####..#.#.##.#..#...#.#.##.#....#..#.####.#.#####.###..##.#.####...##.###.#.#....#.#####
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}

	public struct Day21: Input {
		public init() {}
		public let inputExample1: String = #"""
Player 1 starting position: 4
Player 2 starting position: 8
"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""
Player 1 starting position: 3
Player 2 starting position: 7
"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}
	
	public struct Day22: Input {
		public init() {}
		public let inputExample1: String = #"""

"""#
		
		public var inputExample2: String {
			inputExample1
		}
		
		public let inputMain1: String = #"""

"""#
		
		public var inputMain2: String {
			inputMain1
		}
	}

}
